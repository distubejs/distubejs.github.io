(function(e){function t(t){for(var a,r,o=t[0],l=t[1],c=t[2],d=0,p=[];d<o.length;d++)r=o[d],Object.prototype.hasOwnProperty.call(i,r)&&i[r]&&p.push(i[r][0]),i[r]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);u&&u(t);while(p.length)p.shift()();return n.push.apply(n,c||[]),s()}function s(){for(var e,t=0;t<n.length;t++){for(var s=n[t],a=!0,o=1;o<s.length;o++){var l=s[o];0!==i[l]&&(a=!1)}a&&(n.splice(t--,1),e=r(r.s=s[0]))}return e}var a={},i={app:0},n=[];function r(t){if(a[t])return a[t].exports;var s=a[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=a,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(s,a,function(t){return e[t]}.bind(null,a));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/";var o=window["webpackJsonp"]=window["webpackJsonp"]||[],l=o.push.bind(o);o.push=t,o=o.slice();for(var c=0;c<o.length;c++)t(o[c]);var u=l;n.push([0,"chunk-vendors"]),s()})({0:function(e,t,s){e.exports=s("56d7")},"034f":function(e,t,s){"use strict";s("85ec")},"0455":function(e,t,s){"use strict";s("ce9c")},"0811":function(e,t,s){},"0d3a":function(e,t,s){"use strict";s("17e0")},1224:function(e,t,s){"use strict";s("3742")},"17e0":function(e,t,s){},"1ac8":function(e,t,s){"use strict";s("c64f")},"1c3a":function(e,t,s){},"1d48":function(e,t,s){},"201b":function(e,t,s){},"2db7":function(e,t,s){},"2e08":function(e,t,s){},3149:function(e,t,s){"use strict";s("778f")},3742:function(e,t,s){},"382f":function(e,t,s){"use strict";s("f616")},"38ce":function(e){e.exports=JSON.parse('{"meta":{"generator":"0.10.0","format":21,"date":1624877533376},"custom":{"plugin":{"name":"Plugin","files":{"list":{"name":"Plugin List","type":"md","content":"# Official Plugin\\r\\n- [@distube/spotify](https://www.npmjs.com/package/@distube/spotify): Spotify custom plugin.\\r\\n- [@distube/soundcloud](https://www.npmjs.com/package/@distube/soundcloud): SoundCloud extractor plugin.","path":"pages/plugin/list.md"},"dev":{"name":"Plugin Development","type":"md","content":"# Plugin Development (WIP)\\r\\n- Plugins will provide data to DisTube for handling and playing song without having to edit the DisTube files to support other sites.\\r\\n\\r\\n## Extractor Plugin\\r\\n- Example: [@distube/soundcloud](https://www.npmjs.com/package/@distube/soundcloud)\\r\\n\\r\\n## Custom Plugin\\r\\n- Example: [@distube/spotify](https://www.npmjs.com/package/@distube/spotify)","path":"pages/plugin/dev.md"}}}},"classes":[{"name":"DisTube","description":"DisTube class","extends":[[["EventEmitter"]]],"construct":{"name":"DisTube","description":"Create a new DisTube class.","params":[{"name":"client","description":"JS client","type":[[["Discord","."],["Client"]]]},{"name":"otp","description":"Custom DisTube options","optional":true,"type":[[["DisTubeOptions"]]]}],"examples":["const Discord = require(\'discord.js\'),\\r    DisTube = require(\'distube\'),\\r    client = new Discord.Client();\\r// Create a new DisTube\\rconst distube = new DisTube.default(client, { searchSongs: 10 });\\r// client.DisTube = distube // make it access easily\\rclient.login(\\"Your Discord Bot Token\\")"]},"props":[{"name":"client","description":"Discord.JS client","type":[[["Discord","."],["Client"]]],"meta":{"line":47,"file":"DisTube.js","path":"dist"}},{"name":"voices","description":"Voice connections manager","type":[[["DisTubeVoiceManager"]]],"meta":{"line":53,"file":"DisTube.js","path":"dist"}},{"name":"options","description":"DisTube options","type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTube.js","path":"dist"}},{"name":"handler","description":"DisTube\'s Handler","access":"private","type":[[["DisTubeHandler"]]],"meta":{"line":64,"file":"DisTube.js","path":"dist"}},{"name":"queues","description":"Queues manager","type":[[["QueueManager"]]],"meta":{"line":69,"file":"DisTube.js","path":"dist"}},{"name":"filters","description":"DisTube filters","type":[[["Filters"]]],"meta":{"line":74,"file":"DisTube.js","path":"dist"}},{"name":"extractorPlugins","description":"Extractor Plugins","access":"private","type":[[["Array","<"],["ExtractorPlugin",">"]]],"meta":{"line":121,"file":"DisTube.js","path":"dist"}},{"name":"customPlugins","description":"Custom Plugins","access":"private","type":[[["Array","<"],["CustomPlugin",">"]]],"meta":{"line":127,"file":"DisTube.js","path":"dist"}}],"methods":[{"name":"play","description":"Shorthand method for {@link DisTube#playVoiceChannel}","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"play\\")\\r        distube.play(message, args.join(\\" \\"));\\r});"],"params":[{"name":"message","description":"A message from guild channel","type":[[["Discord","."],["Message"]]]},{"name":"song","description":"YouTube url | Search string | {@link Song} | {@link SearchResult} | {@link Playlist}","type":[[["string"]],[["Song"]],[["SearchResult"]],[["Playlist"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["Object"]]]},{"name":"options.skip","description":"Skip the playing song (if exists) and play the added song/playlist instantly","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"options.unshift","description":"Add the song/playlist to the beginning of the queue (after the playing song if exists)","optional":true,"default":false,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":146,"file":"DisTube.js","path":"dist"}},{"name":"playVoiceChannel","description":"Play / add a song or playlist from url. Search and play a song if it is not a valid url.\\rEmit {@link DisTube#addList}, {@link DisTube#addSong} or {@link DisTube#playSong} after executing","params":[{"name":"voiceChannel","description":"The voice channel will be joined","type":[[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]]]},{"name":"song","description":"YouTube url | Search string | {@link Song} | {@link SearchResult} | {@link Playlist}","type":[[["string"]],[["Song"]],[["SearchResult"]],[["Playlist"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["Object"]]]},{"name":"options.skip","description":"Skip the playing song (if exists) and play the added song/playlist instantly","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"options.unshift","description":"Add the song/playlist to the beginning of the queue (after the playing song if exists)","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"options.member","description":"Requested user (default is your bot)","optional":true,"type":[[["Discord","."],["GuildMember"]]]},{"name":"options.textChannel","description":"Default {@link Queue#textChannel} (if the queue wasn\'t created)","optional":true,"default":null,"type":[[["Discord","."],["TextChannel"]]]},{"name":"options.message","description":"Called message (For built-in search events. If this is a {@link https://developer.mozilla.org/en-US/docs/Glossary/Falsy|falsy value}, it will play the first result instead)","optional":true,"type":[[["Discord","."],["Message"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":184,"file":"DisTube.js","path":"dist"}},{"name":"playCustomPlaylist","description":"Play or add array of video urls.\\r{@link DisTube#event:playSong} or {@link DisTube#event:addList} will be emitted\\rwith `playlist`\'s properties include `properties` parameter\'s properties such as\\r`user`, `songs`, `duration`, `formattedDuration`, `thumbnail` like {@link Playlist}","examples":["let songs = [\\"https://www.youtube.com/watch?v=xxx\\", \\"https://www.youtube.com/watch?v=yyy\\"];\\r    distube.playCustomPlaylist(message, songs, { name: \\"My playlist name\\" });\\r    // Fetching custom playlist sequentially (reduce lag for low specs)\\r    distube.playCustomPlaylist(message, songs, { name: \\"My playlist name\\" }, false, false);"],"params":[{"name":"message","description":"A message from guild channel","type":[[["Discord","."],["Message"]]]},{"name":"songs","description":"Array of url, Song or SearchResult","type":[[["Array","<"],["string","|"],["Song","|"],["SearchResult",">"]]]},{"name":"properties","description":"Additional properties such as `name`","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["Object"]]]},{"name":"options.skip","description":"Skip the playing song (if exists) and play the added song/playlist instantly","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"options.unshift","description":"Add the song/playlist to the beginning of the queue (after the playing song if exists)","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"options.parallel","description":"Whether or not fetch the songs in parallel","optional":true,"default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":282,"file":"DisTube.js","path":"dist"}},{"name":"search","description":"Search for a song.\\rYou can customize how user answers instead of send a number.\\rThen use {@link DisTube#play} or {@link DisTube#playSkip} to play it.","params":[{"name":"string","description":"The string search for","type":[[["string"]]]},{"name":"options","description":"Search options","type":[[["Object"]]]},{"name":"options.limit","description":"Limit the results","optional":true,"default":10,"type":[[["number"]]]},{"name":"options.type","description":"Type of search (`video` or `playlist`).","optional":true,"default":"\'video\'","type":[[["\'video","\'"]],[["\'playlist","\'"]]]},{"name":"options.safeSearch","description":"Whether or not use safe search (YouTube restricted mode)","optional":true,"default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["SearchResult",">>"]]],"description":"Array of results"},"meta":{"line":311,"file":"DisTube.js","path":"dist"}},{"name":"_newQueue","description":"Create a new guild queue","access":"private","params":[{"name":"message","description":"A message from guild channel | a voice channel","type":[[["Discord","."],["Message"]],[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]]]},{"name":"song","description":"Song to play","type":[[["Song"]],[["Array","<"],["Song",">"]]]},{"name":"textChannel","description":"A text channel of the queue","type":[[["Discord","."],["TextChannel"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Queue","|"],["true",">"]]],"description":"`true` if queue is not generated"},"meta":{"line":350,"file":"DisTube.js","path":"dist"}},{"name":"getQueue","description":"Get the guild queue","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"queue\\") {\\r        const queue = distube.getQueue(message);\\r        message.channel.send(\'Current queue:\\\\n\' + queue.songs.map((song, id) =>\\r            `**${id+1}**. [${song.name}](${song.url}) - \\\\`${song.formattedDuration}\\\\``\\r        ).join(\\"\\\\n\\"));\\r    }\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["Queue"]]],"nullable":true},"meta":{"line":382,"file":"DisTube.js","path":"dist"}},{"name":"pause","description":"Pause the guild stream","params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":391,"file":"DisTube.js","path":"dist"}},{"name":"resume","description":"Resume the guild stream","params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":404,"file":"DisTube.js","path":"dist"}},{"name":"stop","description":"Stop the guild stream","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"stop\\") {\\r        distube.stop(message);\\r        message.channel.send(\\"Stopped the queue!\\");\\r    }\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"meta":{"line":426,"file":"DisTube.js","path":"dist"}},{"name":"setVolume","description":"Set the guild stream\'s volume","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"volume\\")\\r        distube.setVolume(message, Number(args[0]));\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]},{"name":"percent","description":"The percentage of volume you want to set","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":448,"file":"DisTube.js","path":"dist"}},{"name":"skip","description":"Skip the playing song","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"skip\\")\\r        distube.skip(message);\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["Song"]]],"description":"The new Song will be played"},"meta":{"line":469,"file":"DisTube.js","path":"dist"}},{"name":"previous","description":"Play the previous song","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"previous\\")\\r        distube.previous(message);\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["Song"]]],"description":"The new Song will be played"},"meta":{"line":490,"file":"DisTube.js","path":"dist"}},{"name":"shuffle","description":"Shuffle the guild queue songs","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"shuffle\\")\\r        distube.shuffle(message);\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":513,"file":"DisTube.js","path":"dist"}},{"name":"jump","description":"Jump to the song number in the queue.\\rThe next one is 1, 2,...\\rThe previous one is -1, -2,...","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"jump\\")\\r        distube.jump(message, parseInt(args[0]))\\r            .catch(err => message.channel.send(\\"Invalid song number.\\"));\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]},{"name":"num","description":"The song number to play","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":538,"file":"DisTube.js","path":"dist"}},{"name":"setRepeatMode","description":"Set the repeat mode of the guild queue.\\rTurn off if repeat mode is the same value as new mode.\\rToggle mode: `mode = null` `(0 -> 1 -> 2 -> 0...)`","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"repeat\\") {\\r        let mode = distube.setRepeatMode(message, parseInt(args[0]));\\r        mode = mode ? mode == 2 ? \\"Repeat queue\\" : \\"Repeat song\\" : \\"Off\\";\\r        message.channel.send(\\"Set repeat mode to `\\" + mode + \\"`\\");\\r    }\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]},{"name":"mode","description":"The repeat modes `(0: disabled, 1: Repeat a song, 2: Repeat all the queue)`","optional":true,"default":null,"nullable":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"The new repeat mode"},"meta":{"line":564,"file":"DisTube.js","path":"dist"}},{"name":"toggleAutoplay","description":"Toggle autoplay mode","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command == \\"autoplay\\") {\\r        let mode = distube.toggleAutoplay(message);\\r        message.channel.send(\\"Set autoplay mode to `\\" + (mode ? \\"On\\" : \\"Off\\") + \\"`\\");\\r    }\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["boolean"]]],"description":"Autoplay mode state"},"meta":{"line":587,"file":"DisTube.js","path":"dist"}},{"name":"addRelatedSong","description":"Add related song to the queue","params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["Promise","<"],["Queue",">"]]],"description":"The guild queue"},"meta":{"line":600,"file":"DisTube.js","path":"dist"}},{"name":"setFilter","description":"Enable or disable a filter of the queue.\\rAvailable filters: {@link Filters}","examples":["client.on(\'message\', (message) => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if ([`3d`, `bassboost`, `echo`, `karaoke`, `nightcore`, `vaporwave`].includes(command)) {\\r        let filter = distube.setFilter(message, command);\\r        message.channel.send(\\"Current queue filter: \\" + (filter.join(\\", \\") || \\"Off\\"));\\r    }\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]},{"name":"filter","description":"A filter name, `false` to clear all the filters","type":[[["string"]],[["false"]]]}],"returns":{"types":[[["Array","<"],["string",">"]]],"description":"Enabled filters."},"meta":{"line":624,"file":"DisTube.js","path":"dist"}},{"name":"seek","description":"Set the playing time to another position","examples":["client.on(\'message\', message => {\\r    if (!message.content.startsWith(config.prefix)) return;\\r    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\r    const command = args.shift();\\r    if (command = \'seek\')\\r        distube.seek(message, Number(args[0]));\\r});"],"params":[{"name":"queue","description":"The type can be resolved to give a {@link Queue}","type":[[["QueueResolvable"]]]},{"name":"time","description":"Time in seconds","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"Seeked queue"},"meta":{"line":645,"file":"DisTube.js","path":"dist"}},{"name":"emitError","description":"Emit error event","access":"private","params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","nullable":true,"type":[[["Discord","."],["TextChannel"]]]}],"meta":{"line":659,"file":"DisTube.js","path":"dist"}}],"events":[{"name":"addList","description":"Emitted after DisTube add a new playlist to the playing {@link Queue}","examples":["distube.on(\\"addList\\", (queue, playlist) => queue.textChannel.send(\\r    `Added \\\\`${playlist.name}\\\\` playlist (${playlist.songs.length} songs) to the queue!`\\r));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"playlist","description":"Playlist info","type":[[["Playlist"]]]}],"meta":{"line":675,"file":"DisTube.js","path":"dist"}},{"name":"addSong","description":"Emitted after DisTube add a new song to the playing {@link Queue}","examples":["distube.on(\\"addSong\\", (queue, song) => queue.textChannel.send(\\r    `Added ${song.name} - \\\\`${song.formattedDuration}\\\\` to the queue by ${song.user}.`\\r));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"song","description":"Added song","type":[[["Song"]]]}],"meta":{"line":686,"file":"DisTube.js","path":"dist"}},{"name":"empty","description":"Emitted when there is no user in the voice channel, {@link DisTubeOptions}.leaveOnEmpty is `true` and there is a playing queue.\\rIf there is no playing queue (stopped and {@link DisTubeOptions}.leaveOnStop is `false`), it will leave the channel without emitting this event.","examples":["distube.on(\\"empty\\", queue => queue.textChannel.send(\\"Channel is empty. Leaving the channel\\"))"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":697,"file":"DisTube.js","path":"dist"}},{"name":"error","description":"Emitted when {@link DisTube} encounters an error.","examples":["distube.on(\\"error\\", (channel, error) => channel.send(\\r    \\"An error encountered: \\" + error\\r));"],"params":[{"name":"channel","description":"Text channel where the error is encountered.","type":[[["Discord","."],["TextChannel"]]]},{"name":"error","description":"The error encountered","type":[[["Error"]]]}],"meta":{"line":706,"file":"DisTube.js","path":"dist"}},{"name":"finish","description":"Emitted when there is no more song in the queue and {@link Queue#autoplay} is `false`.\\rDisTube will leave voice channel if {@link DisTubeOptions}.leaveOnFinish is `true`","examples":["distube.on(\\"finish\\", queue => queue.textChannel.send(\\"No more song in queue\\"));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":717,"file":"DisTube.js","path":"dist"}},{"name":"initQueue","description":"Emitted when DisTube initialize a queue to change queue default properties.","examples":["distube.on(\\"initQueue\\", queue => {\\r    queue.autoplay = false;\\r    queue.volume = 100;\\r});"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":726,"file":"DisTube.js","path":"dist"}},{"name":"noRelated","description":"Emitted when {@link Queue#autoplay} is `true`, the {@link Queue#songs} is empty and\\rDisTube cannot find related songs to play","examples":["distube.on(\\"noRelated\\", queue => queue.textChannel.send(\\"Can\'t find related video to play.\\"));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":737,"file":"DisTube.js","path":"dist"}},{"name":"playSong","description":"Emitted when DisTube play a song.\\rIf {@link DisTubeOptions}.emitNewSongOnly is `true`, event is not emitted when looping a song or next song is the previous one","examples":["const status = (queue) => `Volume: \\\\`${queue.volume}%\\\\` | Loop: \\\\`${queue.repeatMode ? queue.repeatMode == 2 ? \\"Server Queue\\" : \\"This Song\\" : \\"Off\\"}\\\\` | Autoplay: \\\\`${queue.autoplay ? \\"On\\" : \\"Off\\"}\\\\``;\\rdistube.on(\\"playSong\\", (queue, song) => queue.textChannel.send(\\r    `Playing \\\\`${song.name}\\\\` - \\\\`${song.formattedDuration}\\\\`\\\\nRequested by: ${song.user}\\\\n${status(queue)}`\\r));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"song","description":"Playing song","type":[[["Song"]]]}],"meta":{"line":746,"file":"DisTube.js","path":"dist"}},{"name":"searchNoResult","description":"Emitted when DisTube cannot find any results for the query","examples":["distube.on(\\"searchNoResult\\", (message, query) => message.channel.send(`No result found for ${query}!`));"],"params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":759,"file":"DisTube.js","path":"dist"}},{"name":"searchCancel","description":"Emitted when {@link DisTubeOptions|DisTubeOptions.searchSongs} bigger than 0\\rand the search canceled due to user\'s next message is invalid number or timeout","examples":["// DisTubeOptions.searchSongs > 0\\rdistube.on(\\"searchCancel\\", (message) => message.channel.send(`Searching canceled`));"],"params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":768,"file":"DisTube.js","path":"dist"}},{"name":"searchResult","description":"Emitted when {@link DisTubeOptions|DisTubeOptions.searchSongs} bigger than 0\\rand song param of {@link DisTube#play|play()} is invalid url.\\rDisTube will wait for user\'s next message to choose song manually.\\r<info>{@link https://support.google.com/youtube/answer/7354993|Safe search} is enabled\\rif {@link DisTubeOptions}.nsfw is disabled and the message\'s channel is not a nsfw channel.</info>","examples":["// DisTubeOptions.searchSongs > 0\\rdistube.on(\\"searchResult\\", (message, results) => {\\r    message.channel.send(`**Choose an option from below**\\\\n${results.map((song, i) => `**${i + 1}**. ${song.name} - \\\\`${song.formattedDuration}\\\\``).join(\\"\\\\n\\")}\\\\n*Enter anything else or wait 60 seconds to cancel*`);\\r});"],"params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"results","description":"Searched results","type":[[["Array","<"],["SearchResult",">"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":779,"file":"DisTube.js","path":"dist"}},{"name":"searchDone","description":"Emitted when {@link DisTubeOptions|DisTubeOptions.searchSongs} bigger than 0\\rand after the user chose a search result to play","params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"answer","description":"The answered message of user","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":796,"file":"DisTube.js","path":"dist"}},{"name":"disconnect","description":"Emitted when the bot is disconnected to the voice channel","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":805,"file":"DisTube.js","path":"dist"}},{"name":"deleteQueue","description":"Emitted when a {@link Queue} is deleted with any reasons.","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":811,"file":"DisTube.js","path":"dist"}},{"name":"finishSong","description":"Emitted when DisTube finished a song","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"song","description":"Finished song","type":[[["Song"]]]}],"meta":{"line":817,"file":"DisTube.js","path":"dist"}}],"meta":{"line":24,"file":"DisTube.js","path":"dist"}},{"name":"DisTubeBase","access":"private","props":[{"name":"distube","description":"DisTube","access":"private","type":[[["DisTube"]]],"meta":{"line":12,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"queues","description":"The queue manager","access":"private","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":39,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"voices","description":"The voice manager","access":"private","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":48,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"client","description":"Discord.js client","access":"private","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":57,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"options","description":"DisTube options","access":"private","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":66,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"handler","description":"DisTube handler","access":"private","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":75,"file":"DisTubeBase.js","path":"dist/core"}}],"methods":[{"name":"emit","description":"Emit the {@link DisTube} of this base","access":"private","params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":21,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"emitError","description":"Emit error event","access":"private","params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","nullable":true,"type":[[["Discord","."],["TextChannel"]]]}],"meta":{"line":30,"file":"DisTubeBase.js","path":"dist/core"}}],"meta":{"line":5,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"DisTubeHandler","description":"DisTube\'s Handler","extends":[[["DisTubeBase"]]],"access":"private","props":[{"name":"distube","description":"DisTube","access":"private","type":[[["DisTube"]]],"meta":{"line":12,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"queues","description":"The queue manager","access":"private","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":39,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"voices","description":"The voice manager","access":"private","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":48,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"client","description":"Discord.js client","access":"private","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":57,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"options","description":"DisTube options","access":"private","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":66,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"handler","description":"DisTube handler","access":"private","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":75,"file":"DisTubeBase.js","path":"dist/core"}}],"methods":[{"name":"getYouTubeInfo","params":[{"name":"url","description":"url","type":[[["string"]]]},{"name":"basic","description":"getBasicInfo?","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["Promise","<"],["ytdl","."],["videoInfo",">"]]],"meta":{"line":34,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"resolveSong","description":"Resolve a Song","params":[{"name":"member","description":"Requested user","type":[[["Discord","."],["GuildMember"]]]},{"name":"song","description":"URL | Search string | {@link Song}","type":[[["string"]],[["Song"]],[["SearchResult"]],[["Playlist"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Song","|"],["Playlist","|"],["null",">"]]],"description":"Resolved"},"meta":{"line":46,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"resolvePlaylist","description":"Resole Song[] or url to a Playlist","params":[{"name":"member","description":"Requested user","type":[[["Discord","."],["GuildMember"]]]},{"name":"playlist","description":"Resolvable playlist","type":[[["Array","<"],["Song",">"]],[["string"]]]},{"name":"source","description":"Playlist source","optional":true,"default":"\\"youtube\\"","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["Playlist",">"]]],"meta":{"line":85,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"createCustomPlaylist","description":"Create a custom playlist","params":[{"name":"message","description":"A message from guild channel | A guild member","type":[[["Discord","."],["Message"]],[["Discord","."],["GuildMember"]]]},{"name":"songs","description":"Array of url, Song or SearchResult","type":[[["Array","<"],["string","|"],["Song","|"],["SearchResult",">"]]]},{"name":"properties","description":"Additional properties such as `name`","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"parallel","description":"Whether or not fetch the songs in parallel","optional":true,"default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Playlist",">"]]],"meta":{"line":109,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"handlePlaylist","description":"Play / add a playlist","params":[{"name":"message","description":"A message from guild channel | a voice channel","type":[[["Discord","."],["Message"]],[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]]]},{"name":"playlist","description":"A YouTube playlist url | a Playlist","type":[[["Playlist"]],[["string"]]]},{"name":"textChannel","description":"The default text channel of the queue","optional":true,"default":false,"type":[[["Discord","."],["TextChannel"]],[["boolean"]]]},{"name":"skip","description":"Skip the playing song (if exists) and play the added playlist instantly","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"unshift","description":"Add the playlist to the beginning of the queue (after the playing song if exists)","optional":true,"default":false,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":150,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"searchSong","description":"Search for a song, fire {@link DisTube#event:error} if not found.","params":[{"name":"message","description":"A message from guild channel","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The query string","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<?"],["SearchResult",">"]]],"description":"Song info"},"meta":{"line":192,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"createStream","description":"Create a ytdl stream","params":[{"name":"queue","description":"Queue","type":[[["Queue"]]]}],"returns":[[["DisTubeStream"]]],"meta":{"line":249,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"isVoiceChannelEmpty","description":"Check if the voice channel is empty","params":[{"name":"voiceState","description":"voiceState","type":[[["Discord","."],["VoiceState"]]]}],"returns":[[["boolean"]]],"meta":{"line":268,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"emit","description":"Emit the {@link DisTube} of this base","access":"private","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":21,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"emitError","description":"Emit error event","access":"private","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","nullable":true,"type":[[["Discord","."],["TextChannel"]]]}],"meta":{"line":30,"file":"DisTubeBase.js","path":"dist/core"}}],"meta":{"line":16,"file":"DisTubeHandler.js","path":"dist/core"}},{"name":"DisTubeStream","description":"Create a stream to play with {@link DisTubeVoice}","access":"private","construct":{"name":"DisTubeStream","description":"Create a DisTubeStream to play with {@link DisTubeVoice}","params":[{"name":"url","description":"Stream URL","type":[[["string"]]]},{"name":"options","description":"Stream options","type":[[["StreamOptions"]]]}]},"methods":[{"name":"YouTube","description":"Create a stream from ytdl video formats","scope":"static","params":[{"name":"formats","description":"ytdl video formats","type":[[["Array","<"],["ytdl","."],["videoFormat",">"]]]},{"name":"options","description":"options","type":[[["StreamOptions"]]]}],"returns":[["*"]],"meta":{"line":74,"file":"DisTubeStream.js","path":"dist/core"}},{"name":"DirectLink","description":"Create a stream from a stream url","scope":"static","params":[{"name":"url","description":"stream url","type":[[["string"]]]},{"name":"options","description":"options","type":[[["StreamOptions"]]]}],"returns":[[["Readable"]],[["string"]]],"meta":{"line":93,"file":"DisTubeStream.js","path":"dist/core"}}],"meta":{"line":26,"file":"DisTubeStream.js","path":"dist/core"}},{"name":"BaseManager","description":"Manages the collection of a data model.","access":"private","abstract":true,"props":[{"name":"collection","description":"Collection of of a data model.","type":[[["Discord","."],["Collection"]]],"meta":{"line":21,"file":"BaseManager.js","path":"dist/core/managers"}}],"meta":{"line":14,"file":"BaseManager.js","path":"dist/core/managers"}},{"name":"QueueManager","description":"Queue manager","methods":[{"name":"create","description":"Create a {@link Queue}","access":"private","params":[{"name":"channel","description":"A voice channel","type":[[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]]]},{"name":"song","description":"First song","type":[[["Song"]],[["Array","<"],["Song",">"]]]},{"name":"textChannel","description":"Default text channel","type":[[["Discord","."],["TextChannel"]]]}],"async":true,"returns":[[["Promise","<"],["Queue",">"]]],"meta":{"line":18,"file":"QueueManager.js","path":"dist/core/managers"}},{"name":"get","description":"Get a Queue from a QueueManager with a QueueResolvable.","params":[{"name":"queue","description":"The queue resolvable to resolve","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["Queue"]]],"nullable":true},"meta":{"line":37,"file":"QueueManager.js","path":"dist/core/managers"}},{"name":"_voiceEventHandler","description":"Listen to DisTubeVoice events and handle the Queue","access":"private","params":[{"name":"queue","description":"Queue","type":[[["Queue"]]]}],"meta":{"line":49,"file":"QueueManager.js","path":"dist/core/managers"}},{"name":"_handleSongFinish","description":"Handle the queue when a Song finish","access":"private","params":[{"name":"queue","description":"queue","type":[[["Queue"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":73,"file":"QueueManager.js","path":"dist/core/managers"}},{"name":"_handlePlayingError","description":"Handle error while playing","access":"private","params":[{"name":"queue","description":"queue","type":[[["Queue"]]]},{"name":"error","description":"error","type":[[["Error"]]]}],"meta":{"line":134,"file":"QueueManager.js","path":"dist/core/managers"}},{"name":"playSong","description":"Play a song on voice connection","access":"private","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"error?"},"meta":{"line":159,"file":"QueueManager.js","path":"dist/core/managers"}},{"name":"_emitPlaySong","description":"Whether or not emit playSong event","access":"private","params":[{"name":"queue","description":"Queue","type":[[["Queue"]]]}],"returns":[[["boolean"]]],"meta":{"line":202,"file":"QueueManager.js","path":"dist/core/managers"}}],"meta":{"line":9,"file":"QueueManager.js","path":"dist/core/managers"}},{"name":"DisTubeVoice","description":"Create a voice connection to the voice channel","props":[{"name":"voices","description":"The voice manager that instantiated this connection","type":[[["DisTubeVoiceManager"]]],"meta":{"line":18,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"playbackDuration","description":"Playback duration of the audio resource in seconds","type":[[["number"]]],"meta":{"line":160,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"selfDeaf","description":"Whether the bot is self-deafened","type":[[["boolean"]]],"meta":{"line":174,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"selfMute","description":"Whether the bot is self-muted","type":[[["boolean"]]],"meta":{"line":181,"file":"DisTubeVoice.js","path":"dist/core/voice"}}],"methods":[{"name":"join","description":"Join a voice channel with this connection","access":"private","params":[{"name":"channel","description":"A voice channel","optional":true,"type":[[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]]]}],"async":true,"returns":[[["Promise","<"],["DisTubeVoice",">"]]],"meta":{"line":95,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"leave","description":"Leave the voice channel of this connection","meta":{"line":114,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"stop","description":"Stop the playing stream","access":"private","meta":{"line":125,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"play","description":"Play a readable stream","access":"private","params":[{"name":"stream","description":"Readable stream","type":[[["DisTubeStream"]]]}],"meta":{"line":133,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"setSelfDeaf","description":"Self-deafens/undeafens the bot.","params":[{"name":"selfDeaf","description":"Whether or not the bot should be self-deafened","type":[[["boolean"]]]}],"returns":{"types":[[["boolean"]]],"description":"true if the voice state was successfully updated, otherwise false"},"meta":{"line":189,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"setSelfMute","description":"Self-mutes/unmutes the bot.","params":[{"name":"selfMute","description":"Whether or not the bot should be self-muted","type":[[["boolean"]]]}],"returns":{"types":[[["boolean"]]],"description":"true if the voice state was successfully updated, otherwise false"},"meta":{"line":203,"file":"DisTubeVoice.js","path":"dist/core/voice"}}],"meta":{"line":10,"file":"DisTubeVoice.js","path":"dist/core/voice"}},{"name":"DisTubeVoiceManager","description":"Manages voice connections for {@link DisTube}","props":[{"name":"collection","description":"Collection of {@link DisTubeVoice}.","type":[[["Discord","."],["Collection","<"],["string",", "],["DisTubeVoice",">"]]],"meta":{"line":18,"file":"DisTubeVoiceManager.js","path":"dist/core/voice"}}],"methods":[{"name":"get","description":"Get a {@link DisTubeVoice}.","params":[{"name":"queue","description":"The queue resolvable to resolve","type":[[["QueueResolvable"]]]}],"returns":{"types":[[["DisTubeVoice"]]],"nullable":true},"meta":{"line":11,"file":"DisTubeVoiceManager.js","path":"dist/core/voice"}},{"name":"create","description":"Create a {@link DisTubeVoice}","access":"private","params":[{"name":"channel","description":"A voice channel to join","type":[[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]]]}],"returns":[[["DisTubeVoice"]]],"meta":{"line":29,"file":"DisTubeVoiceManager.js","path":"dist/core/voice"}},{"name":"join","description":"Join a voice channel","params":[{"name":"channel","description":"A voice channel to join","type":[[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]]]}],"async":true,"returns":[[["Promise","<"],["DisTubeVoice",">"]]],"meta":{"line":41,"file":"DisTubeVoiceManager.js","path":"dist/core/voice"}},{"name":"leave","description":"Leave the connected voice channel in a guild","params":[{"name":"id","description":"Guild ID","type":[[["string"]]]}],"meta":{"line":53,"file":"DisTubeVoiceManager.js","path":"dist/core/voice"}}],"meta":{"line":10,"file":"DisTubeVoiceManager.js","path":"dist/core/voice"}},{"name":"CustomPlugin","description":"Custom Plugin","extends":[[["Plugin"]]],"construct":{"name":"CustomPlugin","description":"Create a custom plugin"},"props":[{"name":"type","description":"Type of the plugin","type":[[["\\"custom","\\""]],[["\\"extractor","\\""]]],"meta":{"line":14,"file":"Plugin.js","path":"dist/struct"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":21,"file":"Plugin.js","path":"dist/struct"}},{"name":"handler","description":"Handler","type":[[["DisTubeHandler"]]],"meta":{"line":26,"file":"Plugin.js","path":"dist/struct"}}],"methods":[{"name":"play","description":"Execute if the url is validated","params":[{"name":"voiceChannel","description":"The voice channel will be joined","type":[[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]]]},{"name":"url","description":"Validated url","type":[[["string"]]]},{"name":"member","description":"Requested user","type":[[["Discord","."],["GuildMember"]]]},{"name":"textChannel","description":"Default {@link Queue#textChannel}","nullable":true,"type":[[["Discord","."],["TextChannel"]]]},{"name":"skip","description":"Skip the playing song (if exists) and play the added song/playlist instantly","type":[[["boolean"]]]},{"name":"unshift","description":"Add the song/playlist to the beginning of the queue (after the playing song if exists)","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":25,"file":"CustomPlugin.js","path":"dist/struct"}},{"name":"validate","description":"Check if the url is working with this plugin","inherits":"Plugin#validate","inherited":true,"params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":33,"file":"Plugin.js","path":"dist/struct"}},{"name":"getStreamURL","description":"Get the stream url from {@link Song#url}. Returns {@link Song#url} by default. Not needed if the plugin plays song from YouTube.","inherits":"Plugin#getStreamURL","inherited":true,"params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["string",">"]]],"meta":{"line":41,"file":"Plugin.js","path":"dist/struct"}},{"name":"getRelatedSongs","description":"(Optional) Get related songs from a supported url (Not needed to add {@link Song#related} and member is `null` because it will be added with this function later)","inherits":"Plugin#getRelatedSongs","inherited":true,"params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["Song",">>"]]],"meta":{"line":49,"file":"Plugin.js","path":"dist/struct"}}],"meta":{"line":10,"file":"CustomPlugin.js","path":"dist/struct"}},{"name":"ExtractorPlugin","description":"Extractor Plugin","extends":[[["Plugin"]]],"construct":{"name":"ExtractorPlugin","description":"Create a extractor plugin"},"props":[{"name":"type","description":"Type of the plugin","type":[[["\\"custom","\\""]],[["\\"extractor","\\""]]],"meta":{"line":14,"file":"Plugin.js","path":"dist/struct"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":21,"file":"Plugin.js","path":"dist/struct"}},{"name":"handler","description":"Handler","type":[[["DisTubeHandler"]]],"meta":{"line":26,"file":"Plugin.js","path":"dist/struct"}}],"methods":[{"name":"resolve","description":"Execute if the url is validated (Not needed to add {@link Song#related} because it will be added with {@link Plugin#getRelatedSongs})","params":[{"name":"url","description":"URL","type":[[["string"]]]},{"name":"member","description":"Requested user","type":[[["Discord","."],["GuildMember"]]]}],"async":true,"returns":[[["Promise","<"],["Song","|"],["Array","<"],["Song",">|"],["Playlist",">"]]],"meta":{"line":21,"file":"ExtractorPlugin.js","path":"dist/struct"}},{"name":"validate","description":"Check if the url is working with this plugin","inherits":"Plugin#validate","inherited":true,"params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":33,"file":"Plugin.js","path":"dist/struct"}},{"name":"getStreamURL","description":"Get the stream url from {@link Song#url}. Returns {@link Song#url} by default. Not needed if the plugin plays song from YouTube.","inherits":"Plugin#getStreamURL","inherited":true,"params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["string",">"]]],"meta":{"line":41,"file":"Plugin.js","path":"dist/struct"}},{"name":"getRelatedSongs","description":"(Optional) Get related songs from a supported url (Not needed to add {@link Song#related} and member is `null` because it will be added with this function later)","inherits":"Plugin#getRelatedSongs","inherited":true,"params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["Song",">>"]]],"meta":{"line":49,"file":"Plugin.js","path":"dist/struct"}}],"meta":{"line":9,"file":"ExtractorPlugin.js","path":"dist/struct"}},{"name":"Playlist","description":"Class representing a playlist.","construct":{"name":"Playlist","description":"Create a playlist","params":[{"name":"playlist","description":"Playlist","type":[[["Array","<"],["Song",">"]],[["PlaylistInfo"]]]},{"name":"member","description":"Requested user","type":[[["Discord","."],["GuildMember"]]]},{"name":"properties","description":"Custom properties","type":[[["Object"]]]}]},"props":[{"name":"source","description":"The source of the playlist","type":[[["string"]]],"meta":{"line":30,"file":"Playlist.js","path":"dist/struct"}},{"name":"member","description":"User requested.","type":[[["Discord","."],["GuildMember"]]],"meta":{"line":35,"file":"Playlist.js","path":"dist/struct"}},{"name":"user","description":"User requested.","type":[[["Discord","."],["User"]]],"meta":{"line":40,"file":"Playlist.js","path":"dist/struct"}},{"name":"songs","description":"Playlist songs.","type":[[["Array","<"],["Song",">"]]],"meta":{"line":45,"file":"Playlist.js","path":"dist/struct"}},{"name":"name","description":"Playlist name.","type":[[["string"]]],"meta":{"line":54,"file":"Playlist.js","path":"dist/struct"}},{"name":"url","description":"Playlist URL.","type":[[["string"]]],"meta":{"line":59,"file":"Playlist.js","path":"dist/struct"}},{"name":"thumbnail","description":"Playlist thumbnail.","type":[[["string"]]],"meta":{"line":64,"file":"Playlist.js","path":"dist/struct"}},{"name":"duration","description":"Playlist duration in second.","type":[[["number"]]],"meta":{"line":73,"file":"Playlist.js","path":"dist/struct"}},{"name":"formattedDuration","description":"Formatted duration string `hh:mm:ss`.","type":[[["string"]]],"meta":{"line":81,"file":"Playlist.js","path":"dist/struct"}}],"meta":{"line":9,"file":"Playlist.js","path":"dist/struct"}},{"name":"Plugin","description":"DisTube Plugin","access":"private","props":[{"name":"type","description":"Type of the plugin","type":[[["\\"custom","\\""]],[["\\"extractor","\\""]]],"meta":{"line":14,"file":"Plugin.js","path":"dist/struct"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":21,"file":"Plugin.js","path":"dist/struct"}},{"name":"handler","description":"Handler","type":[[["DisTubeHandler"]]],"meta":{"line":26,"file":"Plugin.js","path":"dist/struct"}}],"methods":[{"name":"validate","description":"Check if the url is working with this plugin","params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":33,"file":"Plugin.js","path":"dist/struct"}},{"name":"getStreamURL","description":"Get the stream url from {@link Song#url}. Returns {@link Song#url} by default. Not needed if the plugin plays song from YouTube.","params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["string",">"]]],"meta":{"line":41,"file":"Plugin.js","path":"dist/struct"}},{"name":"getRelatedSongs","description":"(Optional) Get related songs from a supported url (Not needed to add {@link Song#related} and member is `null` because it will be added with this function later)","params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["Array","<"],["Song",">>"]]],"meta":{"line":49,"file":"Plugin.js","path":"dist/struct"}}],"meta":{"line":8,"file":"Plugin.js","path":"dist/struct"}},{"name":"Queue","description":"Represents a queue.","extends":[[["DisTubeBase"]]],"construct":{"name":"Queue","description":"Create a queue for the guild","params":[{"name":"distube","description":"DisTube","type":[[["DisTube"]]]},{"name":"voice","description":"Voice connection","type":[[["DisTubeVoice"]]]},{"name":"song","description":"First song(s)","type":[[["Song"]],[["Array","<"],["Song",">"]]]},{"name":"textChannel","description":"Default text channel","nullable":true,"type":[[["Discord","."],["TextChannel"]]]}]},"props":[{"name":"clientMember","description":"The client user as a `GuildMember` of this queue\'s guild","type":[[["Discord","."],["GuildMember"]]],"meta":{"line":25,"file":"Queue.js","path":"dist/struct"}},{"name":"voice","description":"Voice connection of this queue.","type":[[["DisTubeVoice"]]],"meta":{"line":30,"file":"Queue.js","path":"dist/struct"}},{"name":"id","description":"Queue id (Guild id)","type":[[["Discord","."],["Snowflake"]]],"meta":{"line":35,"file":"Queue.js","path":"dist/struct"}},{"name":"volume","description":"Get or set the stream volume. Default value: `50`.","type":[[["number"]]],"meta":{"line":40,"file":"Queue.js","path":"dist/struct"}},{"name":"songs","description":"List of songs in the queue (The first one is the playing song)","type":[[["Array","<"],["Song",">"]]],"meta":{"line":45,"file":"Queue.js","path":"dist/struct"}},{"name":"previousSongs","description":"List of the previous songs.","type":[[["Array","<"],["Song",">"]]],"meta":{"line":50,"file":"Queue.js","path":"dist/struct"}},{"name":"stopped","description":"Whether stream is currently stopped.","access":"private","type":[[["boolean"]]],"meta":{"line":56,"file":"Queue.js","path":"dist/struct"}},{"name":"next","description":"Whether or not the last song was skipped to next song.","access":"private","type":[[["boolean"]]],"meta":{"line":62,"file":"Queue.js","path":"dist/struct"}},{"name":"prev","description":"Whether or not the last song was skipped to previous song.","access":"private","type":[[["boolean"]]],"meta":{"line":68,"file":"Queue.js","path":"dist/struct"}},{"name":"playing","description":"Whether or not the stream is currently playing.","type":[[["boolean"]]],"meta":{"line":73,"file":"Queue.js","path":"dist/struct"}},{"name":"paused","description":"Whether or not the stream is currently paused.","type":[[["boolean"]]],"meta":{"line":78,"file":"Queue.js","path":"dist/struct"}},{"name":"repeatMode","description":"Type of repeat mode (`0` is disabled, `1` is repeating a song, `2` is repeating all the queue).\\rDefault value: `0` (disabled)","type":[[["number"]]],"meta":{"line":84,"file":"Queue.js","path":"dist/struct"}},{"name":"autoplay","description":"Whether or not the autoplay mode is enabled.\\rDefault value: `false`","type":[[["boolean"]]],"meta":{"line":90,"file":"Queue.js","path":"dist/struct"}},{"name":"filters","description":"Enabled audio filters.\\rAvailable filters: {@link Filters}","type":[[["Array","<"],["string",">"]]],"meta":{"line":96,"file":"Queue.js","path":"dist/struct"}},{"name":"beginTime","description":"What time in the song to begin (in seconds).","type":[[["number"]]],"meta":{"line":101,"file":"Queue.js","path":"dist/struct"}},{"name":"textChannel","description":"The text channel of the Queue. (Default: where the first command is called).","nullable":true,"type":[[["Discord","."],["TextChannel"]]],"meta":{"line":106,"file":"Queue.js","path":"dist/struct"}},{"name":"emptyTimeout","description":"Timeout for checking empty channel","access":"private","type":[["*"]],"meta":{"line":112,"file":"Queue.js","path":"dist/struct"}},{"name":"formattedDuration","description":"Formatted duration string.","type":[[["string"]]],"meta":{"line":118,"file":"Queue.js","path":"dist/struct"}},{"name":"duration","description":"Queue\'s duration.","type":[[["number"]]],"meta":{"line":125,"file":"Queue.js","path":"dist/struct"}},{"name":"currentTime","description":"What time in the song is playing (in seconds).","type":[[["number"]]],"meta":{"line":132,"file":"Queue.js","path":"dist/struct"}},{"name":"formattedCurrentTime","description":"Formatted {@link Queue#currentTime} string.","type":[[["string"]]],"meta":{"line":139,"file":"Queue.js","path":"dist/struct"}},{"name":"voiceChannel","description":"The voice channel playing in.","type":[[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]],[["null"]]],"meta":{"line":146,"file":"Queue.js","path":"dist/struct"}},{"name":"distube","description":"DisTube","access":"private","type":[[["DisTube"]]],"meta":{"line":12,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"queues","description":"The queue manager","access":"private","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":39,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"voices","description":"The voice manager","access":"private","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":48,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"client","description":"Discord.js client","access":"private","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":57,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"options","description":"DisTube options","access":"private","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":66,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"handler","description":"DisTube handler","access":"private","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":75,"file":"DisTubeBase.js","path":"dist/core"}}],"methods":[{"name":"addToQueue","description":"Add a Song or an array of Song to the queue","params":[{"name":"song","description":"Song to add","type":[[["Song"]],[["Array","<"],["Song",">"]]]},{"name":"position","description":"Position to add, < 0 to add to the end of the queue","optional":true,"default":-1,"type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":162,"file":"Queue.js","path":"dist/struct"}},{"name":"pause","description":"Pause the guild stream","returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":196,"file":"Queue.js","path":"dist/struct"}},{"name":"resume","description":"Resume the guild stream","returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":209,"file":"Queue.js","path":"dist/struct"}},{"name":"setVolume","description":"Set the guild stream\'s volume","params":[{"name":"percent","description":"The percentage of volume you want to set","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":223,"file":"Queue.js","path":"dist/struct"}},{"name":"skip","description":"Skip the playing song","returns":{"types":[[["Song"]]],"description":"The song will skip to"},"meta":{"line":232,"file":"Queue.js","path":"dist/struct"}},{"name":"previous","description":"Play the previous song","returns":{"types":[[["Song"]]],"description":"The guild queue"},"meta":{"line":246,"file":"Queue.js","path":"dist/struct"}},{"name":"shuffle","description":"Shuffle the queue\'s songs","returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":263,"file":"Queue.js","path":"dist/struct"}},{"name":"jump","description":"Jump to the song number in the queue.\\rThe next one is 1, 2,...\\rThe previous one is -1, -2,...","params":[{"name":"num","description":"The song number to play","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":283,"file":"Queue.js","path":"dist/struct"}},{"name":"setRepeatMode","description":"Set the repeat mode of the guild queue.\\rTurn off if repeat mode is the same value as new mode.\\rToggle mode: `mode = null` `(0 -> 1 -> 2 -> 0...)`","params":[{"name":"mode","description":"The repeat modes `(0: disabled, 1: Repeat a song, 2: Repeat all the queue)`","optional":true,"default":null,"nullable":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"The new repeat mode"},"meta":{"line":313,"file":"Queue.js","path":"dist/struct"}},{"name":"setFilter","description":"Enable or disable filter(s) of the queue.\\rAvailable filters: {@link Filters}","params":[{"name":"filter","description":"A filter name, an array of filter name or `false` to clear all the filters","type":[[["string"]],[["Array","<"],["string",">"]],[["false"]]]},{"name":"force","description":"Force enable the input filter(s) even if it\'s enabled","default":false,"type":[[["boolean"]]]}],"returns":{"types":[[["Array","<"],["string",">"]]],"description":"Enabled filters."},"meta":{"line":336,"file":"Queue.js","path":"dist/struct"}},{"name":"seek","description":"Set the playing time to another position","params":[{"name":"time","description":"Time in seconds","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":376,"file":"Queue.js","path":"dist/struct"}},{"name":"addRelatedSong","description":"Add a related song of the playing song to the queue","async":true,"returns":{"types":[[["Promise","<"],["Queue",">"]]],"description":"The guild queue"},"meta":{"line":386,"file":"Queue.js","path":"dist/struct"}},{"name":"stop","description":"Stop the guild stream","meta":{"line":401,"file":"Queue.js","path":"dist/struct"}},{"name":"delete","description":"Delete the queue","meta":{"line":412,"file":"Queue.js","path":"dist/struct"}},{"name":"toggleAutoplay","description":"Toggle autoplay mode","returns":{"types":[[["boolean"]]],"description":"Autoplay mode state"},"meta":{"line":422,"file":"Queue.js","path":"dist/struct"}},{"name":"emit","description":"Emit the {@link DisTube} of this base","access":"private","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":21,"file":"DisTubeBase.js","path":"dist/core"}},{"name":"emitError","description":"Emit error event","access":"private","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","nullable":true,"type":[[["Discord","."],["TextChannel"]]]}],"meta":{"line":30,"file":"DisTubeBase.js","path":"dist/core"}}],"meta":{"line":10,"file":"Queue.js","path":"dist/struct"}},{"name":"SearchResult","description":"Class representing a search result.","construct":{"name":"SearchResult","description":"Create a search result","params":[{"name":"info","description":"ytsr result","type":[[["Object"]]]}]},"props":[{"name":"type","description":"Type of SearchResult (`video` or `playlist`)","type":[[["string"]]],"meta":{"line":18,"file":"SearchResult.js","path":"dist/struct"}},{"name":"id","description":"YouTube video or playlist id","type":[[["string"]]],"meta":{"line":23,"file":"SearchResult.js","path":"dist/struct"}},{"name":"name","description":"Video or playlist title.","type":[[["string"]]],"meta":{"line":28,"file":"SearchResult.js","path":"dist/struct"}},{"name":"url","description":"Video or playlist URL.","type":[[["string"]]],"meta":{"line":33,"file":"SearchResult.js","path":"dist/struct"}},{"name":"views","description":"[Video only] Video or playlist views count","type":[[["number"]]],"meta":{"line":40,"file":"SearchResult.js","path":"dist/struct"}},{"name":"isLive","description":"[Video only] Indicates if the video is an active live.","nullable":true,"type":[[["boolean"]]],"meta":{"line":45,"file":"SearchResult.js","path":"dist/struct"}},{"name":"duration","description":"[Video only] Video duration.","type":[[["number"]]],"meta":{"line":50,"file":"SearchResult.js","path":"dist/struct"}},{"name":"formattedDuration","description":"[Video only] Formatted duration string `hh:mm:ss` or `mm:ss`.","type":[[["string"]]],"meta":{"line":55,"file":"SearchResult.js","path":"dist/struct"}},{"name":"thumbnail","description":"[Video only] Video thumbnail.","nullable":true,"type":[[["string"]]],"meta":{"line":60,"file":"SearchResult.js","path":"dist/struct"}},{"name":"uploader","description":"Song uploader","type":[[["Object"]]],"props":[{"name":"name","description":"Uploader name","nullable":true,"type":[[["string"]]]},{"name":"url","description":"Uploader url","nullable":true,"type":[[["string"]]]}],"meta":{"line":71,"file":"SearchResult.js","path":"dist/struct"}}],"meta":{"line":6,"file":"SearchResult.js","path":"dist/struct"}},{"name":"Song","description":"Class representing a song.\\r<info>If {@link Song} is added from a YouTube {@link SearchResult} or {@link Playlist}, some info will be missing to save your resources.\\rIt will be filled when emitting {@link DisTube#playSong} event.\\r\\rMissing info: {@link Song#likes}, {@link Song#dislikes}, {@link Song#streamURL}, {@link Song#related}, {@link Song#chapters}, {@link Song#age_restricted}</info>","construct":{"name":"Song","description":"Create a Song","params":[{"name":"info","description":"Raw info","type":[[["ytdl","."],["videoInfo"]],[["SearchResult"]],[["OtherSongInfo"]]]},{"name":"member","description":"Requested user","nullable":true,"type":[[["Discord","."],["GuildMember"]]]},{"name":"src","description":"Song source","default":"youtube","type":[[["string"]]]}]},"props":[{"name":"source","description":"The source of the song","type":[[["string"]]],"meta":{"line":31,"file":"Song.js","path":"dist/struct"}},{"name":"formats","description":"Stream formats (Available if the song is playing)","access":"private","nullable":true,"type":[[["Array","<"],["ytdl","."],["videoFormat",">"]]],"meta":{"line":50,"file":"Song.js","path":"dist/struct"}},{"name":"id","description":"YouTube video id","type":[[["string"]]],"meta":{"line":69,"file":"Song.js","path":"dist/struct"}},{"name":"name","description":"Song name aka video title.","type":[[["string"]]],"meta":{"line":74,"file":"Song.js","path":"dist/struct"}},{"name":"isLive","description":"Indicates if the video is an active live.","type":[[["boolean"]]],"meta":{"line":79,"file":"Song.js","path":"dist/struct"}},{"name":"duration","description":"Song duration.","type":[[["number"]]],"meta":{"line":84,"file":"Song.js","path":"dist/struct"}},{"name":"formattedDuration","description":"Formatted duration string (`hh:mm:ss`, `mm:ss` or `Live`).","type":[[["string"]]],"meta":{"line":89,"file":"Song.js","path":"dist/struct"}},{"name":"url","description":"Song URL.","type":[[["string"]]],"meta":{"line":94,"file":"Song.js","path":"dist/struct"}},{"name":"streamURL","description":"Stream / Download URL (Available if the song is playing)","nullable":true,"type":[[["string"]]],"meta":{"line":99,"file":"Song.js","path":"dist/struct"}},{"name":"thumbnail","description":"Song thumbnail.","nullable":true,"type":[[["string"]]],"meta":{"line":104,"file":"Song.js","path":"dist/struct"}},{"name":"related","description":"Related songs","type":[[["Array","<"],["Song",">"]]],"meta":{"line":112,"file":"Song.js","path":"dist/struct"}},{"name":"views","description":"Song views count","type":[[["number"]]],"meta":{"line":117,"file":"Song.js","path":"dist/struct"}},{"name":"likes","description":"Song like count","type":[[["number"]]],"meta":{"line":122,"file":"Song.js","path":"dist/struct"}},{"name":"dislikes","description":"Song dislike count","type":[[["number"]]],"meta":{"line":127,"file":"Song.js","path":"dist/struct"}},{"name":"uploader","description":"Song uploader","type":[[["Object"]]],"props":[{"name":"name","description":"Uploader name","nullable":true,"type":[[["string"]]]},{"name":"url","description":"Uploader url","nullable":true,"type":[[["string"]]]}],"meta":{"line":134,"file":"Song.js","path":"dist/struct"}},{"name":"age_restricted","description":"Whether or not an age-restricted content","type":[[["boolean"]]],"meta":{"line":142,"file":"Song.js","path":"dist/struct"}},{"name":"chapters","description":"Chapters information (YouTube only)","type":[[["Array","<"],["Chapter",">"]]],"meta":{"line":152,"file":"Song.js","path":"dist/struct"}},{"name":"reposts","description":"Song repost count","type":[[["number"]]],"meta":{"line":157,"file":"Song.js","path":"dist/struct"}},{"name":"playlist","description":"The playlist added this song","nullable":true,"type":[[["Playlist"]]],"meta":{"line":205,"file":"Song.js","path":"dist/struct"}},{"name":"member","description":"User requested","nullable":true,"type":[[["Discord","."],["GuildMember"]]],"meta":{"line":219,"file":"Song.js","path":"dist/struct"}},{"name":"user","description":"User requested","nullable":true,"type":[[["Discord","."],["User"]]],"meta":{"line":224,"file":"Song.js","path":"dist/struct"}}],"methods":[{"name":"_patchOther","description":"Patch data from other source","access":"private","params":[{"name":"info","description":"Video info","type":[[["OtherSongInfo"]]]}],"meta":{"line":164,"file":"Song.js","path":"dist/struct"}},{"name":"_patchPlaylist","access":"private","params":[{"name":"playlist","description":"Playlist","type":[[["Playlist"]]]},{"name":"member","description":"Requested user","optional":true,"type":[[["Discord","."],["GuildMember"]]]}],"returns":[[["Song"]]],"meta":{"line":197,"file":"Song.js","path":"dist/struct"}},{"name":"_patchMember","access":"private","params":[{"name":"member","description":"Requested user","optional":true,"type":[[["Discord","."],["GuildMember"]]]}],"returns":[[["Song"]]],"meta":{"line":213,"file":"Song.js","path":"dist/struct"}}],"meta":{"line":16,"file":"Song.js","path":"dist/struct"}}],"interfaces":[],"typedefs":[{"name":"QueueResolvable","description":"Data that resolves to give a {@link Queue} object. This can be:\\r- A {@link Queue}\\r- A guild ID string\\r- A {@link https://discord.js.org/#/docs/main/master/class/Snowflake|Snowflake}\\r- A {@link https://discord.js.org/#/docs/main/master/class/Message|Message}\\r- A {@link https://discord.js.org/#/docs/main/master/class/VoiceChannel|VoiceChannel}\\r- A {@link https://discord.js.org/#/docs/main/master/class/StageChannel|StageChannel}\\r- A {@link https://discord.js.org/#/docs/main/master/class/VoiceState|VoiceState}","type":[[["Queue"]],[["Discord","."],["Snowflake"]],[["Discord","."],["Message"]],[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]],[["Discord","."],["VoiceState"]],[["string"]]],"meta":{"line":78,"file":"constants.js","path":"dist"}},{"name":"Filters","description":"FFmpeg Filters\\r```\\r{\\r  \\"Filter Name\\": \\"Filter Value\\",\\r  \\"bassboost\\":   \\"bass=g=10\\"\\r}\\r```","see":["{@link DefaultFilters}"],"type":[[["Object","<"],["string",", "],["string",">"]]],"meta":{"line":89,"file":"constants.js","path":"dist"}},{"name":"DefaultFilters","description":"Default DisTube audio filters.","type":[[["Object"]]],"props":[{"name":"3d","description":"3d","type":[[["string"]]]},{"name":"bassboost","description":"bassboost","type":[[["string"]]]},{"name":"echo","description":"echo","type":[[["string"]]]},{"name":"karaoke","description":"karaoke","type":[[["string"]]]},{"name":"nightcore","description":"nightcore","type":[[["string"]]]},{"name":"vaporwave","description":"vaporwave","type":[[["string"]]]},{"name":"flanger","description":"flanger","type":[[["string"]]]},{"name":"gate","description":"gate","type":[[["string"]]]},{"name":"haas","description":"haas","type":[[["string"]]]},{"name":"reverse","description":"reverse","type":[[["string"]]]},{"name":"surround","description":"surround","type":[[["string"]]]},{"name":"mcompand","description":"mcompand","type":[[["string"]]]},{"name":"phaser","description":"phaser","type":[[["string"]]]},{"name":"tremolo","description":"tremolo","type":[[["string"]]]},{"name":"earwax","description":"earwax","type":[[["string"]]]}],"meta":{"line":4,"file":"constants.js","path":"dist"}},{"name":"DisTubeOptions","description":"DisTube options.","type":[[["Object"]]],"props":[{"name":"plugins","description":"DisTube plugins.","optional":true,"type":[[["Array","<"],["CustomPlugin","|"],["ExtractorPlugin",">"]]]},{"name":"emitNewSongOnly","description":"If `true`, {@link DisTube#event:playSong} will not be emitted when looping a song or next song is the same as the previous one","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"leaveOnEmpty","description":"Whether or not leaving voice channel if the voice channel is empty after {@link DisTubeOptions}.emptyCooldown seconds.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"leaveOnFinish","description":"Whether or not leaving voice channel when the queue ends.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"leaveOnStop","description":"Whether or not leaving voice channel after using {@link DisTube#stop} function.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"savePreviousSongs","description":"Whether or not saving the previous songs of the queue and enable {@link DisTube#previous} method","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"searchSongs","description":"Limit of search results emits in {@link DisTube#event:searchResult} event when {@link DisTube#play} method executed. If `searchSongs <= 1`, play the first result","optional":true,"default":0,"type":[[["number"]]]},{"name":"youtubeCookie","description":"YouTube cookies. Read how to get it in {@link https://github.com/fent/node-ytdl-core/blob/997efdd5dd9063363f6ef668bb364e83970756e7/example/cookies.js#L6-L12|YTDL\'s Example}","optional":true,"default":null,"type":[[["string"]]]},{"name":"youtubeIdentityToken","description":"If not given; ytdl-core will try to find it. You can find this by going to a video\'s watch page; viewing the source; and searching for \\"ID_TOKEN\\".","optional":true,"default":null,"type":[[["string"]]]},{"name":"youtubeDL","description":"Whether or not using youtube-dl.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"updateYouTubeDL","description":"Whether or not updating youtube-dl automatically.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"customFilters","description":"Override {@link DefaultFilters} or add more ffmpeg filters. Example=`{ \\"Filter name\\"=\\"Filter value\\"; \\"8d\\"=\\"apulsator=hz=0.075\\" }`","optional":true,"type":[[["Filters"]]]},{"name":"ytdlOptions","description":"`ytdl-core` options","optional":true,"type":[[["Object"]]]},{"name":"searchCooldown","description":"Built-in search cooldown in seconds (When searchSongs is bigger than 0)","optional":true,"default":60,"type":[[["number"]]]},{"name":"emptyCooldown","description":"Built-in leave on empty cooldown in seconds (When leaveOnEmpty is true)","optional":true,"default":60,"type":[[["number"]]]},{"name":"nsfw","description":"Whether or not playing age-restricted content and disabling safe search in non-NSFW channel.","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":40,"file":"constants.js","path":"dist"}},{"name":"Chapter","type":[[["Object"]]],"props":[{"name":"title","description":"Chapter title","type":[[["string"]]]},{"name":"start_time","description":"Chapter start time in seconds","type":[[["number"]]]}],"meta":{"line":143,"file":"Song.js","path":"dist/struct"}}],"externals":[]}')},"4baa":function(e,t,s){"use strict";s("9186")},"4e34":function(e,t,s){"use strict";s("1d48")},"50e1":function(e,t,s){},"56d7":function(e,t,s){"use strict";s.r(t);s("e260"),s("e6cf"),s("cca6"),s("a79d"),s("4de4"),s("ac1f"),s("5319");var a=s("2b0e"),i=s("0e54"),n=s.n(i),r=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"app"}},[s("app-navbar",{attrs:{repository:e.repository}}),s("router-view",{attrs:{darkMode:e.darkMode,konami:e.konami},on:{toggleDarkMode:e.toggleDarkMode,setRepository:e.setRepository}}),s("app-footer",{attrs:{darkMode:e.darkMode},on:{toggleDarkMode:e.toggleDarkMode}}),s("transition",{attrs:{name:"fade-slide-vertical"}},[e.updateExists?s("snackbar",{attrs:{action:"Reload"},on:{click:e.refresh}},[e._v("An updated version of the site is available.")]):e._e()],1)],1)},o=[],l=(s("99af"),function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("header",[s("container",[s("router-link",{attrs:{to:"/"}},[e._v("DisTube")]),s("nav",[s("router-link",{attrs:{to:"/docs"}},[e._v("Documentation")]),s("a",{attrs:{href:"https://github.com/"+e.repository}},[e._v("GitHub")]),s("a",{attrs:{href:"https://discord.gg/feaDd9h"}},[e._v("Discord")]),s("a",{attrs:{href:"https://distube.js.org/guide/"}},[e._v("Guide (WIP)")])],1)],1)],1)}),c=[],u={name:"navbar",props:["repository"]},d=u,p=(s("1ac8"),s("2877")),m=Object(p["a"])(d,l,c,!1,null,null,null),h=m.exports,f=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("footer",[s("container",[s("strong",[s("router-link",{attrs:{to:"/"}},[e._v("DisTube")])],1),s("p",[e._v("A powerfull Discord.js v12 module to manage your music bot")]),s("stats"),s("a",{attrs:{href:"",id:"dark-mode-link"},on:{click:e.toggleDarkMode}},[s("em",{staticClass:"fa",class:e.darkMode?"fa-sun-o":"fa-moon-o"}),e._v(" Turn "+e._s(e.darkMode?"on":"off")+" the lights ")]),s("p",[e._v("Made with "),s("a",{attrs:{href:"https://github.com/discordjs/website",target:"_blank"}},[e._v("discord.js-website")])])],1),s("div",{attrs:{id:"site-meta"}},[s("div",{attrs:{id:"site-meta-label"}},[e._v("π")]),e._v(" commit: "+e._s(e.hash)),s("br"),e._v(" built at: "+e._s(e.builtAt.toUTCString())+" ")])],1)},g=[],y=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",{staticClass:"stats"},[s("li",[e._v(e._s(e.downloads)+" downloads")]),s("li",[e._v(e._s(e.stars)+" stars")]),s("li",[e._v(e._s(e.contributors)+" contributors")])])},b=[],v=s("b85c"),T=s("3835"),k=s("1da1"),_=(s("96cf"),s("d3b7"),s("25f0"),s("3ca3"),s("ddb0"),function(e){return e.json()}),D=function(){},j={downloads:"".concat(5e4.toLocaleString(),"+"),stars:"".concat(50..toLocaleString(),"+"),contributors:"1",fetching:!1},w={name:"stats",data:function(){return j},beforeMount:function(){this.fetch()},methods:{fetch:function(e){function t(){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}((function(){var e=this;return Object(k["a"])(regeneratorRuntime.mark((function t(){var s,a,i,n,r,o,l,c;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!e.fetching){t.next=2;break}return t.abrupt("return");case 2:return e.fetching=!0,t.next=5,Promise.all([fetch("https://api.npmjs.org/downloads/range/2013-08-21:2100-08-21/distube").then(_,D),fetch("https://api.github.com/repos/skick1234/DisTube").then(_,D),fetch("https://api.github.com/repos/skick1234/DisTube/stats/contributors").then(_,D)]);case 5:if(s=t.sent,a=Object(T["a"])(s,3),i=a[0],n=a[1],r=a[2],i){e.downloads=0,o=Object(v["a"])(i.downloads);try{for(o.s();!(l=o.n()).done;)c=l.value,e.downloads+=c.downloads}catch(u){o.e(u)}finally{o.f()}e.downloads=e.downloads.toLocaleString()}n&&(e.stars=n.stargazers_count.toLocaleString()),r&&(e.contributors=r.length.toLocaleString());case 13:case"end":return t.stop()}}),t)})))()}))}},S=w,C=Object(p["a"])(S,y,b,!1,null,null,null),x=C.exports,P={name:"djs-footer",props:["darkMode"],components:{Stats:x},data:function(){return{hash:"61857994f3d13f2d8bf449efa9a98ca381427664",builtAt:new Date(1625293873820)}},methods:{toggleDarkMode:function(e){this.$emit("toggleDarkMode"),e.preventDefault()}}},q=P,M=(s("7d7f"),Object(p["a"])(q,f,g,!1,null,null,null)),O=M.exports,$=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"snackbar"},[s("div",{staticClass:"snackbar-text"},[e._t("default")],2),e.action?s("div",{staticClass:"snackbar-action"},[s("button",{on:{click:e.click}},[e._v(e._s(e.action))])]):e._e()])},R=[],Q={name:"snackbar",props:["action"],methods:{click:function(){this.$emit("click")}}},E=Q,A=(s("584f"),Object(p["a"])(E,$,R,!1,null,null,null)),V=A.exports,L=(s("6062b"),s("2ca0"),s("466d"),s("d4ec")),F=s("bee2"),N=(s("b0c0"),s("ddc3")),W=s.n(N),B=function(e){if(console.log(e),!e.ok)throw new Error("Failed to fetch docs data file from GitHub");return e.json()},U=function(){function e(t){Object(L["a"])(this,e),this.id=t.id,this.name=t.name,this.global=t.global,this.repo=t.repo,this.defaultTag=t.defaultTag||"master",this.defaultClass=t.defaultClass,this.defaultFile=t.defaultFile||{category:"general",id:"welcome"},this.source=t.source||"https://github.com/".concat(this.repo,"/blob/"),this.branchFilter=t.branchFilter||function(e){return"master"!==e},this.tagFilter=t.tagFilter||function(){return!0},this.tags=null,this.recentTag=null}return Object(F["a"])(e,[{key:"fetchTags",value:function(){var e=this;return this.tags?Promise.resolve(this.tags):Promise.all([fetch("https://api.github.com/repos/".concat(this.repo,"/branches")).then(B),fetch("https://api.github.com/repos/".concat(this.repo,"/tags")).then(B)]).catch((function(t){if(localStorage["source-".concat(e.id)]){console.error(t);var s=JSON.parse(localStorage["source-".concat(e.id)]);return[s.branches,s.tags]}throw t})).then((function(t){var s=Object(T["a"])(t,2),a=s[0],i=s[1];e.tags=[e.defaultTag],localStorage["source-".concat(e.id)]=JSON.stringify({branches:a,tags:i});var n,r=Object(v["a"])(a);try{for(r.s();!(n=r.n()).done;){var o=n.value;o.name!==e.defaultTag&&e.branchFilter(o.name)&&e.tags.push(o.name)}}catch(k){r.e(k)}finally{r.f()}var l,c={},u=Object(v["a"])(i);try{for(u.s();!(l=u.n()).done;){var d=l.value;if(W.a.valid(d.name)){var p="".concat(W.a.major(d.name),".").concat(W.a.minor(d.name)),m=W.a.patch(d.name);if(m<c[p])continue;c[p]=m}}}catch(k){u.e(k)}finally{u.f()}var h,f=Object(v["a"])(i);try{for(f.s();!(h=f.n()).done;){var g=h.value;if(g.name!==e.defaultTag&&e.tagFilter(g.name)){if(W.a.valid(g.name)){var y="".concat(W.a.major(g.name),".").concat(W.a.minor(g.name)),b=W.a.patch(g.name);if(b<c[y])continue}e.tags.push(g.name)}}}catch(k){f.e(k)}finally{f.f()}return e.tags}))}},{key:"fetchDocs",value:function(e){return"testSource"===e?new Promise((function(e){return e(s("38ce"))})):fetch("https://raw.githubusercontent.com/".concat(this.repo,"/docs/").concat(e,".json")).then(B)}}]),e}(),I=new Set(["docs","v3-dev"]),H=new U({id:"DisTube",name:"DisTube",repo:"skick1234/DisTube",global:"DisTube",defaultTag:"v2",branchFilter:function(e){return!I.has(e)&&!e.startsWith("dependabot/")},tagFilter:function(e){return e.match(/^\D/)},defaultClass:"DisTube"}),G=s("4530"),z=s.n(G),J=null,Y={name:"app",components:{AppNavbar:h,AppFooter:O,Snackbar:V},data:function(){var e=localStorage.getItem("dark-mode");return{darkMode:"false"!==e&&null!==e,repository:H.repo,updateExists:!1,refreshing:!1,konami:!1}},methods:{toggleDarkMode:function(){this.darkMode=!this.darkMode,localStorage.setItem("dark-mode",this.darkMode),this.darkMode?this.$el.classList.add("dark"):this.$el.classList.remove("dark")},setRepository:function(e){this.repository=e},swUpdated:function(e){this.registration=e.detail,this.updateExists=!0},refresh:function(){this.updateExists&&(this.updateExists=!1,this.registration&&this.registration.waiting&&this.registration.waiting.postMessage({type:"SKIP_WAITING"}))},poop:function(){var e=this,t=document.createElement("div");t.className="poop",t.innerHTML="💩";var s=4e3*Math.random()+1e3;t.style.transition="top ".concat(s,"ms linear, left ").concat(s,"ms linear"),t.style.animation="spin ".concat(s/3e3,"s infinite linear");var a=Math.floor(4*Math.random())+1,i={top:"".concat(2===a||4===a?Math.random()*window.innerHeight:1===a?-200:window.innerHeight+200,"px"),left:"".concat(1===a||3===a?Math.random()*window.innerWidth:4===a?-200:window.innerWidth+200,"px")},n={top:"".concat(2===a||4===a?Math.random()*window.innerHeight:1===a?window.innerHeight+200:-200,"px"),left:"".concat(1===a||3===a?Math.random()*window.innerWidth:4===a?window.innerWidth+200:-200,"px")};Object.assign(t.style,i),window.setTimeout((function(){Object.assign(t.style,n)}),100),document.body.appendChild(t),window.setTimeout((function(){document.body.removeChild(t)}),s+100),window.setTimeout((function(){return e.poop()}),1e4*Math.random()+1e3)}},created:function(){var e=this;document.addEventListener("swUpdated",this.swUpdated,{once:!0}),navigator.serviceWorker.addEventListener("controllerchange",(function(){e.refreshing||(e.refreshing=!0,window.location.reload())}))},mounted:function(){var e=this;this.darkMode&&this.$el.classList.add("dark"),J||(J=new z.a((function(){e.konami=!0,e.poop(),J.disable()})))}},K=Y,Z=(s("034f"),Object(p["a"])(K,r,o,!1,null,null,null)),X=Z.exports,ee=s("8c4f"),te=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"home"}},[s("slide",{attrs:{id:"jumbotron"}},[s("logo",{attrs:{light:!0,konami:e.konami,id:"logo"}}),s("code",[e._v("npm install distube")]),s("br")],1),s("section",{attrs:{id:"info"}},[e._m(0),s("div",{staticClass:"info-item"},[s("h2",[e._v("Statistics")]),s("p",{staticClass:"center"},[s("stats")],1),s("p",{staticClass:"center"},[e._v("...and growing!")])]),s("div",{staticClass:"full-info-item"},[s("router-link",{staticClass:"big-ass-btn",attrs:{to:"/docs"}},[e._v("Get started")]),s("a",{staticClass:"big-ass-btn discord",attrs:{href:"https://discord.gg/feaDd9h"}},[e._v("Discord")])],1)])],1)},se=[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"info-item"},[s("h2",[e._v("About")]),s("p",[e._v(" DisTube is a "),s("a",{attrs:{href:"https://discord.js.org/"}},[e._v("discord.js")]),e._v(" module to simplify your music commands and play songs with audio filters on Discord without any API key. ")]),s("p",[s("ul",[s("li",[e._v("Support YouTube, SoundCloud, Facebook, and "),s("a",{attrs:{href:"http://ytdl-org.github.io/youtube-dl/supportedsites.html",target:"_blank"}},[e._v("700+ more sites")])]),s("li",[e._v("Audio filters included (bassboost, nightcore, vaporwave,...)")]),s("li",[e._v("Flexible, use and customize easily")]),s("li",[e._v("Autoplay related YouTube songs")]),s("li",[e._v("Multiple servers compatible")])])])])}],ae=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/skick1234/MaBu-CDN@4.7.14/DisTube/img/banner.png"}})},ie=[],ne={name:"logo",props:["light","konami"]},re=ne,oe=Object(p["a"])(re,ae,ie,!1,null,null,null),le=oe.exports,ce={name:"home",props:["konami"],components:{Logo:le,Stats:x},mounted:function(){this.$emit("setRepository",H.repo)}},ue=ce,de=(s("fed3"),Object(p["a"])(ue,te,se,!1,null,null,null)),pe=de.exports,me=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"docs"}},[s("docs-navbar",{attrs:{sources:e.sources,source:e.source}}),s("router-view",{attrs:{source:e.source,tag:e.tag,darkMode:e.darkMode},on:{toggleDarkMode:e.toggleDarkMode,setRepository:e.setRepository}})],1)},he=[],fe=s("ade3"),ge=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"docs-navbar"}},[s("container",[e._v(" View docs for "),s("select",{directives:[{name:"model",rawName:"v-model",value:e.sourceChoice,expression:"sourceChoice"}],on:{change:function(t){var s=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){var t="_value"in e?e._value:e.value;return t}));e.sourceChoice=t.target.multiple?s:s[0]}}},e._l(e.sources,(function(t){return s("option",{key:t.id,domProps:{value:t.id}},[e._v(e._s(t.name))])})),0),s("transition",{attrs:{name:"fade",mode:"out-in"},on:{enter:e.updateTagChoice}},[e.tags?s("select",{directives:[{name:"model",rawName:"v-model",value:e.tagChoice,expression:"tagChoice"}],key:e.source.id,on:{change:function(t){var s=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){var t="_value"in e?e._value:e.value;return t}));e.tagChoice=t.target.multiple?s:s[0]}}},e._l(e.tags,(function(t){return s("option",{key:t,domProps:{value:t}},[e._v(e._s(t))])})),0):s("loading")],1),s("input",{directives:[{name:"model",rawName:"v-model.lazy.trim",value:e.search,expression:"search",modifiers:{lazy:!0,trim:!0}},{name:"debounce",rawName:"v-debounce",value:200,expression:"200"}],attrs:{type:"search",placeholder:"Search"},domProps:{value:e.search},on:{keypress:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.goToSearch.apply(null,arguments)},change:function(t){e.search=t.target.value.trim()},blur:function(t){return e.$forceUpdate()}}}),s("router-link",{attrs:{to:{name:"docs-search"}}},[s("em",{staticClass:"fa fa-search"})])],1)],1)},ye=[],be=s("5530"),ve=(s("841c"),s("db3b")),Te=s.n(ve),ke=s("53ca"),_e=(s("1276"),s("fb6a"),s("9911"),s("a15b"),s("0b16"));function De(e){if(window.hljs)window.hljs.highlightBlock(e);else var t=0,s=setInterval((function(){window.hljs?(window.hljs.highlightBlock(e),clearInterval(s)):(t++,t>=50&&clearInterval(s))}),100)}function je(e,t,s,a,i){return Object(_e["resolve"])(e,"".concat(t,"/").concat(s).concat(a?"/".concat(a):"").concat(i?"#L".concat(i):""))}function we(e,t){var s=e.match(/\{@link\s+(.+?)(?:\s|\|+(.+?))?\s*\}/i);s&&(e=s[1]);var a=s?s[2]:null,i=e.split(/(\.|#)/);return t.links[i[0]]?{text:a||e,link:"object"===Object(ke["a"])(t.links[i[0]])?{name:t.links[i[0]].name,params:t.links[i[0]].params,query:{scrollTo:i[1]?"".concat("."===i[1]?"s-":"").concat(i[2]):void 0}}:t.links[i[0]]}:e.match(/^https?:\/\//i)?{text:a||e,link:e}:{text:a||e}}function Se(e,t,s,a){if(!e)return null;var i,n=/\{@link\s+(.+?)(?:\s+(.+?))?\s*\}/gi,r="",o=0;while(i=n.exec(e)){r+=e.slice(o,i.index);var l=we(i[0],t);if(l.link){var c=void 0;"object"===Object(ke["a"])(l.link)?(l.link.params||(l.link.params={}),l.link.params.source=a.params.source,l.link.params.tag=a.params.tag,c=s.resolve(l.link).href):c=l.link,r+="[".concat(l.text,"](").concat(c,")")}else r+=l.text;o=i.index+i[0].length}return r?(r+=e.slice(o),r):e}function Ce(e){return"".concat("static"===e.scope?"s-":"").concat(e.name)}function xe(e){return"string"===typeof e?e:e.join("-")}var Pe={switching:!1},qe={name:"docs-navbar",props:["sources","source"],directives:{debounce:Te.a},data:function(){return{sourceChoice:this.source.id,tagChoice:null,tags:null,search:this.$route.query.q}},methods:{loadTags:function(){var e=this;if(this.tags=this.source.tags,!this.tags){var t=this.source;this.source.fetchTags().then((function(s){e.source.id===t.id&&(e.tags=s)}))}},updateTagChoice:function(){this.tags&&(this.tagChoice=this.$route.params.tag||this.source.recentTag||this.source.defaultTag)},goToSearch:function(){"docs-search"!==this.$route.name&&this.$router.push({name:"docs-search",query:{q:this.search}})}},watch:{sourceChoice:function(e){this.$route.params.source!==e&&this.$router.push({name:"docs-source",params:{source:e}})},tagChoice:function(e){e&&this.$route.params.tag!==e&&(Pe.switching=!0,this.$router.push({name:this.$route.name,params:Object(be["a"])(Object(be["a"])({},this.$route.params),{},{tag:e}),query:this.$route.query}))},source:function(e){this.sourceChoice=e.id,this.tagChoice=null,this.loadTags()},search:function(e){this.$route.query.q?this.$router.replace({name:"docs-search",query:{q:e}}):this.$router.push({name:"docs-search",query:{q:e}})},$route:function(e){this.tagChoice&&e.params.tag&&this.tagChoice!==e.params.tag&&(this.tagChoice=e.params.tag)}},created:function(){this.loadTags()},mounted:function(){this.updateTagChoice()}},Me=qe,Oe=(s("596e"),Object(p["a"])(Me,ge,ye,!1,null,null,null)),$e=Oe.exports,Re={name:"documentation",props:["darkMode"],components:{DocsNavbar:$e},data:function(){return{sources:Object(fe["a"])({},H.id,H),source:H,tag:H.defaultTag}},methods:{setSource:function(e){this.source=this.sources[e]},setTag:function(e){this.tag=e,this.source.recentTag=e},handleRoute:function(e){var t="docs-file";if(!e.params.source||!this.sources[e.params.source]){var s={source:H.id,tag:H.defaultTag};return H.defaultClass?(t="docs-class",s.class=H.defaultClass):(s.category=H.defaultFile.category,s.file=H.defaultFile.id),void this.$router.replace({name:t,params:s})}if(this.setSource(e.params.source),!e.params.tag){var a={source:this.source.id,tag:this.source.recentTag||this.source.defaultTag};return this.source.defaultClass?(t="docs-class",a.class=this.source.defaultClass):(a.category=this.source.defaultFile.category,a.file=this.source.defaultFile.id),void this.$router.replace({name:t,params:a})}if(this.setTag(e.params.tag),!e.params.file&&!e.params.class&&!e.params.typedef&&"docs-search"!==e.name){var i={source:this.source.id,tag:this.tag};this.source.defaultClass?(t="docs-class",i.class=this.source.defaultClass):(i.category=this.source.defaultFile.category,i.file=this.source.defaultFile.id),this.$router.replace({name:t,params:i})}},toggleDarkMode:function(){this.$emit("toggleDarkMode")},setRepository:function(e){this.$emit("setRepository",e)}},watch:{$route:function(e){this.handleRoute(e)}},created:function(){this.handleRoute(this.$route)}},Qe=Re,Ee=Object(p["a"])(Qe,me,he,!1,null,null,null),Ae=Ee.exports,Ve=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("slide",{attrs:{id:"unknown-route"}},[s("unknown-page",{attrs:{type:"route",darkMode:e.darkMode}})],1)},Le=[],Fe={name:"unknown-route",props:["darkMode"]},Ne=Fe,We=(s("e283"),Object(p["a"])(Ne,Ve,Le,!1,null,null,null)),Be=We.exports,Ue=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"docs-body"}},[s("transition",{attrs:{name:"fade-resize",mode:"out-in"}},[e.docs?s("router-view",{attrs:{docs:e.docs,darkMode:e.darkMode},on:{toggleDarkMode:e.toggleDarkMode,setRepository:e.setRepository}}):s("slide",[e.error?s("p",{attrs:{id:"docs-error"}},[e._v(" Couldn't load the documentation data. "),s("pre",[e._v(e._s(e.error.toString()))])]):s("loading")],1)],1)],1)},Ie=[],He=(s("4e82"),s("7db0"),s("c69e")),Ge=s.n(He),ze={name:"docs-loader",props:["source","tag","darkMode"],data:function(){return{docs:null,error:null,loadingTag:null,routeHook:null}},methods:{loadDocs:function(){var e=this;if(this.loadingTag!==this.tag){this.docs=null,this.error=null;var t=this.source,s=this.tag;this.loadingTag=this.tag,this.setRepository(this.source.repo),this.source.fetchDocs(this.tag).then((function(a){if(e.source===t&&e.tag===s){console.log("Loading",t,s),a.classes.sort((function(e,t){return e.name.localeCompare(t.name)})),a.typedefs.sort((function(e,t){return e.name.localeCompare(t.name)}));var i,n=Object(v["a"])(a.classes);try{for(n.s();!(i=n.n()).done;){var r=i.value;r.props&&r.props.sort((function(e,t){return e.name.localeCompare(t.name)})),r.methods&&r.methods.sort((function(e,t){return e.name.localeCompare(t.name)})),r.events&&r.events.sort((function(e,t){return e.name.localeCompare(t.name)}))}}catch(y){n.e(y)}finally{n.f()}a.links=Ge.a,a.externals=a.externals||[],a.classes=a.classes||[],a.typedefs=a.typedefs||[];var o,l=Object(v["a"])(a.externals);try{for(l.s();!(o=l.n()).done;){var c=o.value;a.links[c.name]=c.see[0].replace(/\{@link\s+(.+?)\s*\}/i,"$1")}}catch(y){l.e(y)}finally{l.f()}var u,d=Object(v["a"])(a.classes);try{for(d.s();!(u=d.n()).done;){var p=u.value;a.links[p.name]={name:"docs-class",params:{class:p.name}}}}catch(y){d.e(y)}finally{d.f()}var m,h=Object(v["a"])(a.typedefs);try{for(h.s();!(m=h.n()).done;){var f=m.value;a.links[f.name]={name:"docs-typedef",params:{typedef:f.name}}}}catch(y){h.e(y)}finally{h.f()}if("commando"===e.source.id&&(a.links.Message={name:"docs-class",params:{source:"main",tag:"master",class:"Message"}}),a.global=e.source.global,a.source=e.source.source,a.tag=e.tag,e.docs=a,e.loadingTag=null,e.updatePageTitle(e.$route),console.log("Finished loading",t,s),Pe.switching){var g=e.$route;Pe.switching=!1,"docs-class"===g.name?a.classes.some((function(e){return e.name===g.params.class}))||e.goHome():"docs-typedef"===g.name?a.typedefs.some((function(e){return e.name===g.params.typedef}))||e.goHome():"docs-file"===g.name&&(a.custom[g.params.category]&&a.custom[g.params.category].files[g.params.file]||e.goHome())}}})).catch((function(a){console.error("Error while loading",t,s,a),e.error=a,e.loadingTag=null}))}},scroll:function(e){var t=this;if(this.$route.query.scrollTo&&this.docs){var s=function(){var e=document.getElementById("doc-for-".concat(t.$route.query.scrollTo));e||(e=document.getElementById("doc-for-e-".concat(t.$route.query.scrollTo))),e||(e=document.getElementById(t.$route.query.scrollTo)),e&&(e.setAttribute("data-scrolled",!0),setTimeout((function(){return e.setAttribute("data-scrolled",!1)}),1e3),setTimeout((function(){return e.removeAttribute("data-scrolled")}),2e3),e.scrollIntoView(),window.scrollBy(0,-50))},a=e&&(this.$route.name!==e.name||this.$route.params.class!==e.params.class||this.$route.params.typedef!==e.params.typedef||this.$route.params.file!==e.params.file);a?setTimeout(s,400):s()}},updatePageTitle:function(e){var t=e.matched.find((function(e){return"docs-tag"===e.name}));if(t){var s;if(e.params.file){var a=this.docs.custom[e.params.category];s=a&&a.files[e.params.file]?a.files[e.params.file].name:"Unknown file"}else{var i=e.params,n=i.class,r=i.typedef;if(s=n||r||"Search","Search"===s){var o=e.query.q;o&&(s="".concat(s,": ").concat(o))}else if(n){var l=e.query.scrollTo;l&&(s="".concat(s).concat(l.startsWith("s-")?".".concat(l.slice(2)):"#".concat(l.startsWith("e-")?l.slice(2):l)))}}document.title="".concat(s," | DisTube")}else document.title="DisTube"},goHome:function(){console.log("Redirecting to default file due to the current page not existing in the newly-loaded tag's docs.");var e="docs-file",t={source:this.source.id,tag:this.tag};this.source.defaultClass?(t.class=this.source.defaultClass,e="docs-class"):(t.category=this.source.defaultFile.category,t.file=this.source.defaultFile.id),this.$router.replace({name:e,params:t})},toggleDarkMode:function(){this.$emit("toggleDarkMode")},setRepository:function(e){this.$emit("setRepository",e)}},watch:{source:function(){this.loadDocs()},tag:function(){this.loadDocs()},docs:function(e,t){t||setTimeout(this.scroll,700)},$route:function(e,t){this.scroll(t)}},beforeCreate:function(){var e=this;this.routerHook=this.$router.beforeEach((function(t,s,a){e.updatePageTitle(t),a()}))},created:function(){this.loadDocs()},mounted:function(){this.$nextTick(this.scroll)},beforeDestroy:function(){this.routerHook(),this.routerHook=null}},Je=ze,Ye=(s("4e34"),Object(p["a"])(Je,Ue,Ie,!1,null,null,null)),Ke=Ye.exports,Ze=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"docs-viewer"}},[s("container",[s("sidebar",{attrs:{docs:e.docs,darkMode:e.darkMode},on:{showPrivate:e.setShowPrivate,toggleDarkMode:e.toggleDarkMode}}),s("transition",{attrs:{name:"fade-slide",mode:"out-in"}},[s("router-view",{key:e.key,attrs:{docs:e.docs,showPrivate:e.showPrivate,darkMode:e.darkMode}})],1)],1),s("div",{attrs:{id:"docs-meta"}},[s("p",[e._v(" Documentation built at "+e._s(new Date(e.docs.meta.date).toUTCString())+"."),s("br"),e._v(" Generator: v"+e._s(e.docs.meta.generator)+"   Format: "+e._s(e.docs.meta.format)+" ")])]),s("div",{attrs:{id:"scroll-top",title:"Scroll to top"},on:{click:e.scrollTop}},[s("em",{staticClass:"fa fa-arrow-up"})])],1)},Xe=[],et=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"docs-sidebar"}},[s("div",{attrs:{id:"open-btn"},on:{click:e.toggle}},[s("em",{staticClass:"fa fa-bars"})]),s("div",{class:e.visible?"open":"closed",attrs:{id:"docs-sidebar-content"}},[s("div",{attrs:{id:"close-btn"},on:{click:e.toggle}},[s("em",{staticClass:"fa fa-arrow-left",attrs:{"aria-hidden":"true"}})]),s("em",{staticClass:"fa toggle",class:e.showPrivate?"fa-eye":"fa-eye-slash",attrs:{id:"docs-visibility",title:e.togglePrivateLabel},on:{click:e.togglePrivate}}),s("em",{staticClass:"fa toggle",class:e.darkMode?"fa-moon-o":"fa-sun-o",attrs:{id:"docs-brightness",title:e.toggleDarkModeLabel},on:{click:e.toggleDarkMode}}),s("ul",[e._l(e.docs.custom,(function(t,a){return s("li",{key:a},[e._v(" "+e._s(t.name)+" "),s("ul",e._l(t.files,(function(t,i){return s("li",{key:i},[s("router-link",{attrs:{to:{name:"docs-file",params:{category:a,file:i}}}},[e._v(" "+e._s(t.name)+" ")])],1)})),0)])})),e.visibleClasses.length>0?s("li",[e._v(" Classes "),s("transition-group",{attrs:{name:"animated-list",tag:"ul"}},e._l(e.visibleClasses,(function(t){return s("li",{key:t.name,staticClass:"animated-list-item"},[s("router-link",{attrs:{exact:"",to:{name:"docs-class",params:{class:t.name}}}},[e._v(" "+e._s(t.name)+" ")])],1)})),0)],1):e._e(),e.visibleTypedefs.length>0?s("li",[e._v(" Typedefs "),s("ul",e._l(e.visibleTypedefs,(function(t){return s("li",{key:t.name},[s("router-link",{attrs:{exact:"",to:{name:"docs-typedef",params:{typedef:t.name}}}},[e._v(" "+e._s(t.name)+" ")])],1)})),0)]):e._e()],2)])])},tt=[],st={name:"docs-sidebar",props:["docs","darkMode"],data:function(){return{visible:!1,showPrivate:!1}},computed:{visibleClasses:function(){return this.showPrivate?this.docs.classes:this.docs.classes.filter((function(e){return"private"!==e.access}))},visibleTypedefs:function(){return this.showPrivate?this.docs.typedefs:this.docs.typedefs.filter((function(e){return"private"!==e.access}))},togglePrivateLabel:function(){return"Private items are ".concat(this.showPrivate?"shown":"hidden",". Click to toggle.")},toggleDarkModeLabel:function(){return"The lights are ".concat(this.darkMode?"off":"on",". Click to toggle.")}},methods:{toggle:function(){this.visible=!this.visible},togglePrivate:function(){this.showPrivate=!this.showPrivate},toggleDarkMode:function(){this.$emit("toggleDarkMode")}},watch:{showPrivate:function(e){this.$emit("showPrivate",e)},$route:function(e){this.visible&&(this.visible=!1),!e.query.scrollTo&&(window.pageYOffset||document.documentElement.scrollTop)>300&&window.scrollTo(0,90)}}},at=st,it=(s("382f"),Object(p["a"])(at,et,tt,!1,null,null,null)),nt=it.exports,rt={name:"docs-viewer",props:["docs","darkMode"],components:{Sidebar:nt},data:function(){return{showPrivate:!1}},computed:{key:function(){var e=this.$route.params;return e.file?"".concat(e.category,"/").concat(e.file):e.search?"search":e.class||e.typedef}},methods:{setShowPrivate:function(e){this.showPrivate=e},scrollTop:function(){window.scrollTo(0,0)},toggleDarkMode:function(){this.$emit("toggleDarkMode")}},mounted:function(){this.$nextTick((function(){var e,t,s=document.getElementById("scroll-top"),a=function a(){(window.pageYOffset||document.documentElement.scrollTop)>300&&(clearTimeout(e),clearTimeout(t),s.style.display="block",t=setTimeout((function(){s.style.opacity="1"}),20),window.removeEventListener("scroll",a),window.addEventListener("scroll",i))},i=function i(){(window.pageYOffset||document.documentElement.scrollTop)<300&&(clearTimeout(e),clearTimeout(t),s.style.opacity="0",e=setTimeout((function(){s.style.display="none"}),1e3),window.removeEventListener("scroll",i),window.addEventListener("scroll",a))};window.addEventListener("scroll",a)}))}},ot=rt,lt=(s("f278"),Object(p["a"])(ot,Ze,Xe,!1,null,null,null)),ct=lt.exports,ut=function(){var e=this,t=e.$createElement,s=e._self._c||t;return e.file?s("div",{staticClass:"docs-page",attrs:{id:"file-viewer"}},[s("source-button",{attrs:{path:e.file.path,docs:e.docs}}),s("div",{domProps:{innerHTML:e._s(e.html)}})],1):s("unknown-page",{staticClass:"docs-page",attrs:{darkMode:e.darkMode}})},dt=[],pt=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"source-button"},[s("a",{attrs:{href:""+(e.meta?e.sourceURL(e.meta.path,e.meta.file,e.meta.line):e.sourceURL(e.path)),title:"Source"}},[s("em",{staticClass:"fa fa-code"})])])},mt=[],ht={name:"source-button",props:["meta","path","docs"],methods:{sourceURL:function(e,t,s){return je(this.docs.source,this.docs.tag,e,t,s)}}},ft=ht,gt=(s("dbee"),Object(p["a"])(ft,pt,mt,!1,null,null,null)),yt=gt.exports,bt={name:"file-viewer",props:["docs","darkMode"],components:{SourceButton:yt},data:function(){return this.docs.custom[this.$route.params.category]?{file:this.docs.custom[this.$route.params.category].files[this.$route.params.file]}:{file:null}},computed:{html:function(){var e;return e="md"===this.file.type?this.file.content:"# ".concat(this.file.name,"\n```").concat(this.file.type,"\n").concat(this.file.content,"\n```"),a["a"].filter("marked")(e)}},mounted:function(){var e=this;this.$nextTick((function(){var t,s=Object(v["a"])(e.$el.querySelectorAll("pre code"));try{for(s.s();!(t=s.n()).done;){var a=t.value;De(a)}}catch(i){s.e(i)}finally{s.f()}}))}},vt=bt,Tt=(s("a703"),Object(p["a"])(vt,ut,dt,!1,null,null,null)),kt=Tt.exports,_t=function(){var e=this,t=e.$createElement,s=e._self._c||t;return e.clarse?s("div",{staticClass:"docs-page",attrs:{id:"class-viewer"}},[s("source-button",{attrs:{meta:e.clarse.meta,docs:e.docs}}),s("h1",[e._v(e._s(e.clarse.name))]),s("p",{staticClass:"class-name-extra"},[e.clarse.extends?s("span",[e._v("extends "),"string"===typeof e.clarse.extends[0]?s("type-link",{attrs:{type:e.clarse.extends,docs:e.docs}}):e._l(e.clarse.extends,(function(t){return s("types",{key:e.typeKey(t),attrs:{names:t,docs:e.docs}})}))],2):e._e(),e.clarse.implements?s("span",[e._v(" implements "),"string"===typeof e.clarse.implements[0]?s("type-link",{attrs:{type:e.clarse.implements,docs:e.docs}}):e._l(e.clarse.implements,(function(t){return s("types",{key:e.typeKey(t),attrs:{names:t,docs:e.docs}})}))],2):e._e()]),e.clarse.abstract?s("span",{staticClass:"badge class-badge",attrs:{title:"This class is abstract, and may not be instantiated itself."}},[e._v("Abstract")]):e._e(),e.clarse.deprecated?s("span",{staticClass:"badge class-badge warn",attrs:{title:"This class is deprecated, and may be removed in a future version."}},[e._v("Deprecated")]):e._e(),"private"===e.clarse.access?s("span",{staticClass:"badge class-badge warn",attrs:{title:"This class is private, and may change or be removed at any time."}},[e._v("Private")]):e._e(),e.clarse.description?s("p",{staticClass:"class-desc",domProps:{innerHTML:e._s(e.description)}}):e._e(),e.clarse.see?s("see",{attrs:{see:e.clarse.see,docs:e.docs}}):e._e(),e.clarse.construct&&(e.showPrivate||"private"!==e.clarse.construct.access)?s("div",{attrs:{id:"class-constructor"}},[s("h2",[e._v("Constructor")]),s("pre",[s("code",{staticClass:"js"},[e._v("new "+e._s(e.docs.global&&e.docs.global!==e.clarse.name?e.docs.global+".":"")+e._s(e.clarse.name)+e._s("alpha"===e.tag&&e.clarse.name===e.docs.global?".default":"")+"("),e._l(e.constructorParams,(function(t){return s("span",{key:t.name,staticClass:"constructor-param"},[e._v(e._s(t.name))])})),e._v(");")],2)]),s("param-table",{attrs:{params:e.clarse.construct.params,docs:e.docs}})],1):e._e(),s("overview",{attrs:{properties:e.properties,methods:e.methods,events:e.clarse.events}}),e.properties&&e.properties.length>0?s("h2",[e._v("Properties")]):e._e(),e._l(e.properties,(function(t){return s("property",{key:e.scopedName(t),attrs:{prop:t,docs:e.docs}})})),e.methods&&e.methods.length>0?s("h2",[e._v("Methods")]):e._e(),e._l(e.methods,(function(t){return s("method",{key:e.scopedName(t),attrs:{method:t,docs:e.docs}})})),e.clarse.events&&e.clarse.events.length>0?s("h2",[e._v("Events")]):e._e(),e._l(e.clarse.events,(function(t){return s("event",{key:"e-"+t.name,attrs:{event:t,docs:e.docs}})}))],2):s("unknown-page",{staticClass:"docs-page",attrs:{darkMode:e.darkMode}})},Dt=[],jt=(s("caad"),s("2532"),s("a4d3"),s("e01a"),function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("span",{staticClass:"docs-type"},[e._v(" "+e._s(e.nullable?"?":"")+e._s(e.variable?"...":"")),e._l(e.names,(function(t){return s("type-link",{key:e.typeKey(t),attrs:{type:t,docs:e.docs}})}))],2)}),wt=[],St=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("span",{staticClass:"docs-type-link"},[e.link?"object"===typeof e.link?s("router-link",{attrs:{to:e.link}},[e._v(e._s(e.typeName))]):s("a",{attrs:{href:e.link,target:"_blank"}},[e._v(e._s(e.typeName))]):s("span",{attrs:{title:"*"===e.type[0]?"Any type":null}},[e._v(e._s(e.typeName))]),e.type[1]?s("span",[e._v(e._s(e.type[1]))]):e._e()],1)},Ct=[],xt={name:"type-link",props:["docs","type"],computed:{typeName:function(){return"function"===this.type[0]?"Function":this.type[0]},link:function(){return this.docs.links[this.type[0]]?this.docs.links[this.type[0]]:null}}},Pt=xt,qt=Object(p["a"])(Pt,St,Ct,!1,null,null,null),Mt=qt.exports,Ot={name:"types",props:["names","variable","nullable","docs"],components:{TypeLink:Mt},methods:{typeKey:xe}},$t=Ot,Rt=(s("abe3"),Object(p["a"])($t,jt,wt,!1,null,null,null)),Qt=Rt.exports,Et=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"param-table-wrapper"},[s("table",{staticClass:"param-table"},[s("thead",[s("tr",[s("th",[e._v("Parameter")]),s("th",[e._v("Type")]),e.hasOptional?s("th",[e._v("Optional")]):e._e(),e.hasOptional?s("th",[e._v("Default")]):e._e(),s("th",[e._v("Description")])])]),s("tbody",e._l(e.params,(function(t){return s("tr",{key:t.name},[s("td",[e._v(e._s(t.name))]),s("td",e._l(t.type,(function(a){return s("types",{key:e.typeKey(a),attrs:{names:a,variable:t.variable,nullable:t.nullable,docs:e.docs}})})),1),e.hasOptional?s("td",[t.optional?s("em",{staticClass:"fa fa-check"}):e._e()]):e._e(),e.hasOptional?s("td",[t.optional&&"undefined"===typeof t.default?s("em",[e._v("none")]):s("span",{domProps:{innerHTML:e._s(e.paramDefault(t))}})]):e._e(),s("td",{domProps:{innerHTML:e._s(e.paramDescription(t))}})])})),0)])])},At=[],Vt={name:"param-table",props:["params","docs"],components:{Types:Qt},computed:{hasOptional:function(){return this.params.some((function(e){return e.optional}))}},methods:{typeKey:xe,paramDescription:function(e){return a["a"].filter("marked")(Se(e.description,this.docs,this.$router,this.$route))},paramDefault:function(e){return e.optional?"<code>".concat(e.default,"</code>"):""}}},Lt=Vt,Ft=(s("944c"),Object(p["a"])(Lt,Et,At,!1,null,null,null)),Nt=Ft.exports,Wt=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"class-overview"}},[e.properties&&e.properties.length>0?s("div",{staticClass:"col"},[s("div",{staticClass:"title"},[e._v("Properties")]),s("transition-group",{attrs:{name:"animated-list",tag:"ul"}},e._l(e.properties,(function(t){return s("li",{key:e.scopedName(t),staticClass:"animated-list-item",on:{click:function(s){e.scroll(e.scopedName(t))}}},[s("router-link",{attrs:{to:{name:"docs-class",query:{scrollTo:e.scopedName(t)}}}},[e._v(" "+e._s(t.name)+" "),"static"===t.scope?s("span",{staticClass:"small-badge"},[e._v("S")]):e._e(),t.abstract?s("span",{staticClass:"small-badge"},[e._v("A")]):e._e(),t.deprecated?s("span",{staticClass:"small-badge warn"},[e._v("D")]):e._e(),"private"===t.access?s("span",{staticClass:"small-badge warn"},[e._v("P")]):e._e()])],1)})),0)],1):e._e(),e.methods&&e.methods.length>0?s("div",{staticClass:"col"},[s("div",{staticClass:"title"},[e._v("Methods")]),s("transition-group",{attrs:{name:"animated-list",tag:"ul"}},e._l(e.methods,(function(t){return s("li",{key:e.scopedName(t),staticClass:"animated-list-item",on:{click:function(s){e.scroll(e.scopedName(t))}}},[s("router-link",{attrs:{to:{name:"docs-class",query:{scrollTo:e.scopedName(t)}}}},[e._v(" "+e._s(t.name)+" "),"static"===t.scope?s("span",{staticClass:"small-badge"},[e._v("S")]):e._e(),t.abstract?s("span",{staticClass:"small-badge"},[e._v("A")]):e._e(),t.deprecated?s("span",{staticClass:"small-badge warn"},[e._v("D")]):e._e(),"private"===t.access?s("span",{staticClass:"small-badge warn"},[e._v("P")]):e._e()])],1)})),0)],1):e._e(),e.events&&e.events.length>0?s("div",{staticClass:"col"},[s("div",{staticClass:"title"},[e._v("Events")]),s("ul",e._l(e.events,(function(t){return s("li",{key:t.name,on:{click:function(s){return e.scroll("e-"+t.name)}}},[s("router-link",{attrs:{to:{name:"docs-class",query:{scrollTo:"e-"+t.name}}}},[e._v(" "+e._s(t.name)+" "),t.deprecated?s("span",{staticClass:"small-badge warn"},[e._v("D")]):e._e()])],1)})),0)]):e._e()])},Bt=[],Ut={name:"class-overview",props:["properties","methods","events"],methods:{scopedName:Ce,scroll:function(e){var t=document.getElementById("doc-for-".concat(e));t.setAttribute("data-scrolled",!0),setTimeout((function(){return t.setAttribute("data-scrolled",!1)}),1e3),setTimeout((function(){return t.removeAttribute("data-scrolled")}),2e3),t.scrollIntoView(),window.scrollBy(0,-50)}}},It=Ut,Ht=(s("ac06"),Object(p["a"])(It,Wt,Bt,!1,null,null,null)),Gt=Ht.exports,zt=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"class-prop class-item",attrs:{id:"doc-for-"+e.scrollTo}},[s("source-button",{attrs:{meta:e.prop.meta,docs:e.docs}}),s("h3",[s("router-link",{attrs:{to:{name:"docs-class",query:{scrollTo:e.scrollTo}}}},[e._v("."+e._s(e.prop.name))])],1),"static"===e.prop.scope?s("span",{staticClass:"badge",attrs:{title:"This property is on the class constructor function, not instances."}},[e._v("Static")]):e._e(),e.prop.readonly?s("span",{staticClass:"badge",attrs:{title:"This property cannot be modified."}},[e._v("Read-only")]):e._e(),e.prop.deprecated?s("span",{staticClass:"badge warn",attrs:{title:"This property is deprecated, and may be removed in a future version."}},[e._v("Deprecated")]):e._e(),"private"===e.prop.access?s("span",{staticClass:"badge warn",attrs:{title:"This property is private, and may change or be removed at any time."}},[e._v("Private")]):e._e(),s("div",{staticClass:"class-item-details"},[s("p",{domProps:{innerHTML:e._s(e.description)}}),e.prop.props&&e.prop.props.length>0?s("param-table",{attrs:{params:e.prop.props,docs:e.docs}}):e._e(),s("div",{staticClass:"prop-type"},[e._v(" Type: "),e._l(e.prop.type,(function(t){return s("types",{key:e.typeKey(t),attrs:{names:t,nullable:e.prop.nullable,docs:e.docs}})}))],2),e.prop.default?s("div",{staticClass:"prop-default"},[e._v(" Default: "),s("code",[e._v(e._s(e.prop.default))])]):e._e(),e.prop.see?s("see",{attrs:{see:e.prop.see,docs:e.docs}}):e._e()],1)],1)},Jt=[],Yt=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",{staticClass:"docs-see"},[e._v(" See also: "),e.see.length>1?s("ul",e._l(e.parsed,(function(t){return s("li",{key:t.text},["object"===typeof t.link?s("router-link",{staticClass:"docs-type",attrs:{to:t.link}},[e._v(e._s(t.text))]):"string"===typeof t.link?s("a",{attrs:{href:t.link}},[e._v(e._s(t.text))]):s("span",[e._v(e._s(t.text))])],1)})),0):s("span",["object"===typeof e.parsed[0].link?s("router-link",{staticClass:"docs-type",attrs:{to:e.parsed[0].link}},[e._v(e._s(e.parsed[0].text))]):"string"===typeof e.parsed[0].link?s("a",{attrs:{href:e.parsed[0].link}},[e._v(e._s(e.parsed[0].text))]):s("span",[e._v(e._s(e.parsed[0].text))])],1)])},Kt=[],Zt={name:"docs-see",props:["see","docs"],computed:{parsed:function(){for(var e=new Array(this.see.length),t=0;t<this.see.length;t++)e[t]=we(this.see[t],this.docs);return e}}},Xt=Zt,es=(s("3149"),Object(p["a"])(Xt,Yt,Kt,!1,null,null,null)),ts=es.exports,ss={name:"class-property",props:["prop","docs"],components:{Types:Qt,ParamTable:Nt,SourceButton:yt,See:ts},computed:{description:function(){return a["a"].filter("marked")(Se(this.prop.description,this.docs,this.$router,this.$route))},scrollTo:function(){return"".concat("static"===this.prop.scope?"s-":"").concat(this.prop.name)}},methods:{typeKey:xe}},as=ss,is=(s("defc"),Object(p["a"])(as,zt,Jt,!1,null,null,null)),ns=is.exports,rs=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"class-method class-item",attrs:{id:"doc-for-"+e.scrollTo}},[s("source-button",{attrs:{meta:e.method.meta,docs:e.docs}}),s("h3",[s("router-link",{attrs:{to:{name:"docs-class",query:{scrollTo:e.scrollTo}}}},[e._v(" ."+e._s(e.method.name)+"("),e._l(e.params,(function(t){return s("span",{key:t.name,staticClass:"method-param",class:t.optional?"optional":""},[e._v(e._s(t.variable?"...":"")+e._s(t.name))])})),e._v(") ")],2)],1),"static"===e.method.scope?s("span",{staticClass:"badge",attrs:{title:"This method is on the class constructor function, not instances."}},[e._v("Static")]):e._e(),e.method.abstract?s("span",{staticClass:"badge",attrs:{title:"This method is abstract, and must be implemented in a child class."}},[e._v("Abstract")]):e._e(),e.method.deprecated?s("span",{staticClass:"badge warn",attrs:{title:"This method is deprecated, and may be removed in a future version."}},[e._v("Deprecated")]):e._e(),"private"===e.method.access?s("span",{staticClass:"badge warn",attrs:{title:"This method is private, and may change or be removed at any time."}},[e._v("Private")]):e._e(),s("div",{staticClass:"class-item-details"},[s("p",{domProps:{innerHTML:e._s(e.description)}}),e.method.params?s("param-table",{attrs:{params:e.method.params,docs:e.docs}}):e._e(),s("div",{staticClass:"method-return"},[e._v(" Returns: "),e.method.returns?s("span",e._l(e.method.returns.types||e.method.returns,(function(t){return s("types",{key:e.typeKey(t),attrs:{names:t,variable:e.method.returns.variable,nullable:e.method.returns.nullable,docs:e.docs}})})),1):s("type-link",{staticClass:"docs-type",attrs:{type:["void"],docs:e.docs}}),e.method.returns&&e.method.returns.description?s("p",{domProps:{innerHTML:e._s(e.returnDescription)}}):e._e()],1),e.method.throws?s("div",{staticClass:"method-throws"},[e._v(" Throws: "),e._l(e.method.throws,(function(t){return s("types",{key:t,attrs:{names:t,docs:e.docs}})}))],2):e._e(),e.emits?s("div",{staticClass:"method-emits"},[e._v(" Emits: "),e.emits.length>1?s("ul",e._l(e.emits,(function(t){return s("li",{key:t.text},[s("router-link",{staticClass:"docs-type",attrs:{to:t.link}},[e._v(e._s(t.text))])],1)})),0):s("router-link",{staticClass:"docs-type",attrs:{to:e.emits[0].link}},[e._v(e._s(e.emits[0].text))])],1):e._e(),e.method.examples?s("div",{staticClass:"method-examples"},[e._v(" Examples: "),e._l(e.method.examples,(function(t){return s("pre",{key:t},[s("code",{staticClass:"javascript"},[e._v(e._s(t))])])}))],2):e._e(),e.method.see?s("see",{attrs:{see:e.method.see,docs:e.docs}}):e._e()],1)],1)},os=[],ls=(s("d81d"),{name:"class-method",props:["method","docs"],components:{Types:Qt,TypeLink:Mt,ParamTable:Nt,SourceButton:yt,See:ts},computed:{params:function(){return this.method.params?this.method.params.filter((function(e){return!e.name.includes(".")})):null},description:function(){return a["a"].filter("marked")(Se(this.method.description,this.docs,this.$router,this.$route))},returnDescription:function(){return a["a"].filter("marked")(Se(this.method.returns.description,this.docs,this.$router,this.$route))},emits:function(){var e=this;return this.method.emits?this.method.emits.map((function(t){return we(t.replace(/:event/i,""),e.docs)})):null},scrollTo:function(){return"".concat("static"===this.method.scope?"s-":"").concat(this.method.name)}},methods:{typeKey:xe}}),cs=ls,us=(s("e386"),Object(p["a"])(cs,rs,os,!1,null,null,null)),ds=us.exports,ps=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"class-event class-item",attrs:{id:"doc-for-e-"+e.event.name}},[s("source-button",{attrs:{meta:e.event.meta,docs:e.docs}}),s("h3",[s("router-link",{attrs:{to:{name:"docs-class",query:{scrollTo:"e-"+e.event.name}}}},[e._v(e._s(e.event.name))])],1),e.event.deprecated?s("span",{staticClass:"badge warn",attrs:{title:"This event is deprecated, and may be removed in a future version."}},[e._v("Deprecated")]):e._e(),s("div",{staticClass:"class-item-details"},[s("p",{domProps:{innerHTML:e._s(e.description)}}),e.event.params&&e.event.params.length>0?s("param-table",{attrs:{params:e.event.params,docs:e.docs}}):e._e(),e.event.examples?s("div",{staticClass:"method-examples"},[e._v(" Examples: "),e._l(e.event.examples,(function(t){return s("pre",{key:t},[s("code",{staticClass:"javascript"},[e._v(e._s(t))])])}))],2):e._e(),e.event.see?s("see",{attrs:{see:e.event.see,docs:e.docs}}):e._e()],1)],1)},ms=[],hs={name:"class-event",props:["event","docs"],components:{ParamTable:Nt,SourceButton:yt,See:ts},computed:{description:function(){return a["a"].filter("marked")(Se(this.event.description,this.docs,this.$router,this.$route))}}},fs=hs,gs=(s("7fe0"),Object(p["a"])(fs,ps,ms,!1,null,null,null)),ys=gs.exports,bs={name:"class-viewer",props:["docs","showPrivate","darkMode"],components:{Types:Qt,TypeLink:Mt,ParamTable:Nt,Overview:Gt,Property:ns,Method:ds,Event:ys,SourceButton:yt,See:ts},data:function(){var e=this;return{tag:this.$route.params.tag,clarse:this.docs.classes.find((function(t){return t.name===e.$route.params.class}))}},computed:{constructorParams:function(){return this.clarse.construct&&this.clarse.construct.params?this.clarse.construct.params.filter((function(e){return!e.name.includes(".")})):null},properties:function(){return this.clarse.props?(e=this.showPrivate?this.clarse.props:this.clarse.props.filter((function(e){return"private"!==e.access})),e.sort((function(e,t){return"".concat("static"===e.scope?"ZZZ":"").concat(e.name).localeCompare("".concat("static"===t.scope?"ZZZ":"").concat(t.name))}))):null;var e},methods:function(){return this.clarse.methods?(e=this.showPrivate?this.clarse.methods:this.clarse.methods.filter((function(e){return"private"!==e.access})),e.sort((function(e,t){return"".concat("static"===e.scope?"ZZZ":"").concat(e.name).localeCompare("".concat("static"===t.scope?"ZZZ":"").concat(t.name))}))):null;var e},description:function(){return a["a"].filter("marked")(Se(this.clarse.description,this.docs,this.$router,this.$route))}},methods:{scopedName:Ce,typeKey:xe},mounted:function(){var e=this;this.$nextTick((function(){var t,s=Object(v["a"])(e.$el.querySelectorAll("pre code"));try{for(s.s();!(t=s.n()).done;){var a=t.value;De(a)}}catch(i){s.e(i)}finally{s.f()}}))}},vs=bs,Ts=(s("4baa"),Object(p["a"])(vs,_t,Dt,!1,null,null,null)),ks=Ts.exports,_s=function(){var e=this,t=e.$createElement,s=e._self._c||t;return e.typedef?s("div",{staticClass:"docs-page",attrs:{id:"typedef-viewer"}},[s("source-button",{attrs:{meta:e.typedef.meta,docs:e.docs}}),s("h1",[e._v(e._s(e.typedef.name))]),e.typedef.deprecated?s("span",{staticClass:"badge warn",attrs:{title:"This typedef is deprecated, and may be removed in a future version."}},[e._v("Deprecated")]):e._e(),e.typedef.description?s("p",{staticClass:"typedef-desc",domProps:{innerHTML:e._s(e.description)}}):e._e(),e.typedef.see?s("see",{attrs:{see:e.typedef.see,docs:e.docs}}):e._e(),s("h2",[e._v("Types")]),s("ul",{attrs:{id:"typedef-types"}},e._l(e.typedef.type,(function(t){return s("li",{key:e.typeKey(t)},[s("types",{attrs:{names:t,docs:e.docs}})],1)})),0),e.typedef.props&&e.typedef.props.length>0?s("div",{attrs:{id:"typedef-props"}},[s("h2",[e._v("Properties")]),s("param-table",{attrs:{params:e.typedef.props,docs:e.docs}})],1):e._e(),e.typedef.params&&e.typedef.params.length>0?s("div",{attrs:{id:"typedef-params"}},[s("h2",[e._v("Parameters")]),s("param-table",{attrs:{params:e.typedef.params,docs:e.docs}})],1):e._e(),e.typedef.returns?s("div",{attrs:{id:"typedef-returns"}},[s("h2",[e._v("Returns")]),s("p",{attrs:{id:"typedef-returns-types"}},e._l(e.typedef.returns.types||e.typedef.returns,(function(t){return s("types",{key:e.typeKey(t),attrs:{names:t,variable:e.typedef.returns.variable,nullable:e.typedef.returns.nullable,docs:e.docs}})})),1),e.typedef.returns.description?s("p",{domProps:{innerHTML:e._s(e.returnsDescription)}}):e._e()]):e._e()],1):s("unknown-page",{staticClass:"docs-page",attrs:{darkMode:e.darkMode}})},Ds=[],js={name:"typedef-viewer",props:["docs","darkMode"],components:{Types:Qt,ParamTable:Nt,SourceButton:yt,See:ts},data:function(){var e=this;return{typedef:this.docs.typedefs.find((function(t){return t.name===e.$route.params.typedef}))}},computed:{description:function(){return a["a"].filter("marked")(Se(this.typedef.description,this.docs,this.$router,this.$route))},returnsDescription:function(){var e=this.typedef.returns;return e?a["a"].filter("marked")(Se(e.description,this.docs,this.$router,this.$route)):""}},methods:{typeKey:xe},mounted:function(){var e=this;this.$nextTick((function(){var t,s=Object(v["a"])(e.$el.querySelectorAll("pre code"));try{for(s.s();!(t=s.n()).done;){var a=t.value;De(a)}}catch(i){s.e(i)}finally{s.f()}}))}},ws=js,Ss=(s("0455"),Object(p["a"])(ws,_s,Ds,!1,null,null,null)),Cs=Ss.exports,xs=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"docs-page",attrs:{id:"docs-search"}},[s("em",{class:"fa fa-bar-chart "+(e.showScores?"":"disabled"),attrs:{id:"show-scores",title:e.toggleScoresLabel},on:{click:e.toggleScores}}),s("h1",[e._v("Search")]),s("input",{directives:[{name:"model",rawName:"v-model.lazy.trim",value:e.search,expression:"search",modifiers:{lazy:!0,trim:!0}},{name:"debounce",rawName:"v-debounce",value:200,expression:"200"}],attrs:{type:"search"},domProps:{value:e.search},on:{change:function(t){e.search=t.target.value.trim()},blur:function(t){return e.$forceUpdate()}}}),s("div",{attrs:{id:"toggles"}},[s("label",[s("input",{directives:[{name:"model",rawName:"v-model",value:e.toggles["classes"],expression:"toggles['classes']"}],attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.toggles["classes"])?e._i(e.toggles["classes"],null)>-1:e.toggles["classes"]},on:{change:function(t){var s=e.toggles["classes"],a=t.target,i=!!a.checked;if(Array.isArray(s)){var n=null,r=e._i(s,n);a.checked?r<0&&e.$set(e.toggles,"classes",s.concat([n])):r>-1&&e.$set(e.toggles,"classes",s.slice(0,r).concat(s.slice(r+1)))}else e.$set(e.toggles,"classes",i)}}}),e._v(" Classes")]),s("label",[s("input",{directives:[{name:"model",rawName:"v-model",value:e.toggles["props"],expression:"toggles['props']"}],staticClass:"secondary",attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.toggles["props"])?e._i(e.toggles["props"],null)>-1:e.toggles["props"]},on:{change:function(t){var s=e.toggles["props"],a=t.target,i=!!a.checked;if(Array.isArray(s)){var n=null,r=e._i(s,n);a.checked?r<0&&e.$set(e.toggles,"props",s.concat([n])):r>-1&&e.$set(e.toggles,"props",s.slice(0,r).concat(s.slice(r+1)))}else e.$set(e.toggles,"props",i)}}}),e._v(" Properties")]),s("label",[s("input",{directives:[{name:"model",rawName:"v-model",value:e.toggles["methods"],expression:"toggles['methods']"}],staticClass:"tertiary",attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.toggles["methods"])?e._i(e.toggles["methods"],null)>-1:e.toggles["methods"]},on:{change:function(t){var s=e.toggles["methods"],a=t.target,i=!!a.checked;if(Array.isArray(s)){var n=null,r=e._i(s,n);a.checked?r<0&&e.$set(e.toggles,"methods",s.concat([n])):r>-1&&e.$set(e.toggles,"methods",s.slice(0,r).concat(s.slice(r+1)))}else e.$set(e.toggles,"methods",i)}}}),e._v(" Methods")]),s("label",[s("input",{directives:[{name:"model",rawName:"v-model",value:e.toggles["events"],expression:"toggles['events']"}],staticClass:"quaternary",attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.toggles["events"])?e._i(e.toggles["events"],null)>-1:e.toggles["events"]},on:{change:function(t){var s=e.toggles["events"],a=t.target,i=!!a.checked;if(Array.isArray(s)){var n=null,r=e._i(s,n);a.checked?r<0&&e.$set(e.toggles,"events",s.concat([n])):r>-1&&e.$set(e.toggles,"events",s.slice(0,r).concat(s.slice(r+1)))}else e.$set(e.toggles,"events",i)}}}),e._v(" Events")]),s("label",[s("input",{directives:[{name:"model",rawName:"v-model",value:e.toggles["typedefs"],expression:"toggles['typedefs']"}],staticClass:"quinary",attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.toggles["typedefs"])?e._i(e.toggles["typedefs"],null)>-1:e.toggles["typedefs"]},on:{change:function(t){var s=e.toggles["typedefs"],a=t.target,i=!!a.checked;if(Array.isArray(s)){var n=null,r=e._i(s,n);a.checked?r<0&&e.$set(e.toggles,"typedefs",s.concat([n])):r>-1&&e.$set(e.toggles,"typedefs",s.slice(0,r).concat(s.slice(r+1)))}else e.$set(e.toggles,"typedefs",i)}}}),e._v(" Typedefs")])]),s("transition",{attrs:{name:"fade",mode:"out-in"}},[e.search&&e.search.length>=2?s("div",[s("transition",{attrs:{name:"fade",mode:"out-in"}},[e.results.length?s("transition-group",{attrs:{name:"fade"}},[e.fullMatches.length?s("div",{key:"fullMatches",class:{"results-separator":e.fullMatches.length&&e.partialMatches.length}},[s("h2",[e._v('Results for "'+e._s(e.search)+'" ('+e._s(e.fullMatches.length)+")")]),s("search-results",{attrs:{results:e.fullMatches,showScores:e.showScores,searchTerm:e.search}})],1):e._e(),e.partialMatches.length?s("div",{key:"partialMatches"},[s("h2",[e._v('Similar results for "'+e._s(e.search)+'" ('+e._s(e.partialMatches.length)+")")]),s("search-results",{attrs:{results:e.partialMatches,showScores:e.showScores,searchTerm:e.search}})],1):e._e()]):s("p",[e._v('No results for "'+e._s(e.search)+'".')])],1)],1):s("p",{key:"short"},[e._v("Your search query must be at least two characters.")])])],1)},Ps=[],qs=(s("a434"),s("6062")),Ms=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("transition-group",{staticClass:"results-list",attrs:{name:"animated-list",tag:"ul"}},e._l(e.results,(function(t){return s("li",{key:t.item.key||t.item.fullName||t.item.name,staticClass:"animated-list-item"},[e.showScores?s("span",{staticClass:"score"},[e._v(e._s(Math.round(100*(1-t.score)))+"%")]):e._e(),s("router-link",{attrs:{to:t.item.route}},[s("span",{staticClass:"badge",class:e.typeClass(t.item.type),attrs:{title:t.item.type}},[e._v(e._s(t.item.type[0]))]),s("span",{domProps:{innerHTML:e._s(e.highlightName(t))}}),e._v(e._s("Method"===t.item.type?"()":"")+" ")])],1)})),0)},Os=[],$s=(s("4d63"),{props:["results","showScores","searchTerm"],methods:{highlightName:function(e){var t=e.matches.find((function(e){return"fullName"===e.key}));if(!t)return e.item.fullName||e.item.name;for(var s=t.value,a=t.indices.length-1;a>=0;a--){var i=s.slice(t.indices[a][0],t.indices[a][1]+1),n=s.slice(0,t.indices[a][0]),r=s.slice(t.indices[a][1]+1),o=i.toLowerCase()===this.searchTerm.toLowerCase();s="".concat(n).concat(o?"<strong>":"","<em>").concat(i,"</em>").concat(o?"</strong>":"").concat(r)}return s},typeClass:function(e){return"Property"===e?"secondary":"Method"===e?"tertiary":"Event"===e?"quaternary":"Typedef"===e?"quinary":""}},computed:{searchRegex:function(){return new RegExp(this.searchTerm,"ig")}}}),Rs=$s,Qs=(s("b583"),Object(p["a"])(Rs,Ms,Os,!1,null,null,null)),Es=Qs.exports,As={name:"docs-search",props:["docs","showPrivate"],components:{SearchResults:Es},directives:{debounce:Te.a},data:function(){var e={classes:!0,props:!0,methods:!0,events:!0,typedefs:!0};return{toggles:e,search:this.$route.query.q,showScores:!1,fuse:this.buildFuse(e)}},computed:{results:function(){var e,t=this.fuse.search(this.search),s=Object(v["a"])(t);try{for(s.s();!(e=s.n()).done;){var a=e.value;"Class"!==a.item.type?"Property"!==a.item.type&&"Method"!==a.item.type?"Event"!==a.item.type?"Typedef"!==a.item.type||(a.item.route={name:"docs-typedef",params:{typedef:a.item.name}}):(a.item.key="e-".concat(a.item.parent,"#").concat(a.item.name),a.item.fullName=Vs(a.item,a.item.parent),a.item.route={name:"docs-class",params:{class:a.item.parent},query:{scrollTo:"e-".concat(a.item.name)}}):(a.item.fullName=Vs(a.item,a.item.parent),a.item.route={name:"docs-class",params:{class:a.item.parent},query:{scrollTo:Ce(a.item)}}):a.item.route={name:"docs-class",params:{class:a.item.name}}}}catch(u){s.e(u)}finally{s.f()}var i=0;while(i<t.length){var n=t[i];if("Property"===n.item.type||"Method"===n.item.type||"Event"===n.item.type){var r,o=[],l=Object(v["a"])(n.matches);try{for(l.s();!(r=l.n()).done;){var c=r.value;o.push(c.key)}}catch(u){l.e(u)}finally{l.f()}if(2===o.length&&o.includes("parent")&&o.includes("fullName")){t.splice(i,1);continue}}i++}return t},fullMatches:function(){return this.results.filter((function(e){return 100===Math.round(100*(1-e.score))}))},partialMatches:function(){return this.results.filter((function(e){return 100!==Math.round(100*(1-e.score))}))},toggleScoresLabel:function(){return"Scores are ".concat(this.showScores?"shown":"hidden",". Click to toggle.")}},methods:{toggleScores:function(){this.showScores=!this.showScores},buildFuse:function(e){var t,s=[],a=Object(v["a"])(this.docs.classes);try{for(a.s();!(t=a.n()).done;){var i=t.value;if(this.showPrivate||"private"!==i.access){if(e.classes&&s.push({type:"Class",parent:i.name,name:i.name,fullName:i.name,scope:i.scope,access:i.access,route:null}),i.props&&e.props){var n,r=Object(v["a"])(i.props);try{for(r.s();!(n=r.n()).done;){var o=n.value;(this.showPrivate||"private"!==o.access)&&s.push({type:"Property",parent:i.name,name:o.name,fullName:Vs(o,i.name),scope:o.scope,access:o.access,route:null})}}catch(y){r.e(y)}finally{r.f()}}if(i.methods&&e.methods){var l,c=Object(v["a"])(i.methods);try{for(c.s();!(l=c.n()).done;){var u=l.value;(this.showPrivate||"private"!==u.access)&&s.push({type:"Method",parent:i.name,name:u.name,fullName:Vs(u,i.name),scope:u.scope,access:u.access,route:null})}}catch(y){c.e(y)}finally{c.f()}}if(i.events&&e.events){var d,p=Object(v["a"])(i.events);try{for(p.s();!(d=p.n()).done;){var m=d.value;(this.showPrivate||"private"!==m.access)&&s.push({type:"Event",parent:i.name,name:m.name,fullName:"".concat(i.name,"#").concat(m.name),scope:m.scope,access:m.access,key:null,route:null})}}catch(y){p.e(y)}finally{p.f()}}}}}catch(y){a.e(y)}finally{a.f()}if(e.typedefs){var h,f=Object(v["a"])(this.docs.typedefs);try{for(f.s();!(h=f.n()).done;){var g=h.value;(this.showPrivate||"private"!==g.access)&&s.push({type:"Typedef",parent:g.name,name:g.name,fullName:g.name,scope:g.scope,access:g.access,route:null})}}catch(y){f.e(y)}finally{f.f()}}return new qs["a"](s,{keys:[{name:"name",weight:.5},{name:"parent",weight:.2},{name:"fullName",weight:.3}],shouldSort:!0,includeScore:!0,includeMatches:!0,ignoreLocation:!0,threshold:.4,minMatchCharLength:3})}},watch:{$route:function(e){this.search=e.query.q},search:function(e){this.$route.query.q!==e&&(this.$route.query.q?this.$router.replace({name:"docs-search",query:{q:e}}):this.$router.push({name:"docs-search",query:{q:e}}))},toggles:{deep:!0,handler:function(){this.fuse=this.buildFuse(this.toggles)}},showPrivate:function(){this.fuse=this.buildFuse(this.toggles)}}};function Vs(e,t){return"".concat(t+("static"===e.scope?".":"#")).concat(e.name)}var Ls=As,Fs=(s("0d3a"),Object(p["a"])(Ls,xs,Ps,!1,null,null,null)),Ns=Fs.exports;a["a"].use(ee["a"]);var Ws=new ee["a"]({routes:[{path:"/",name:"home",component:pe},{path:"/docs",name:"docs",component:Ae,children:[{path:":source",name:"docs-source",component:Ke,children:[{path:":tag",name:"docs-tag",component:ct,children:[{path:"search",name:"docs-search",component:Ns},{path:"class/:class",name:"docs-class",component:ks},{path:"typedef/:typedef",name:"docs-typedef",component:Cs},{path:":category/:file",name:"docs-file",component:kt}]}]}]},{path:"/!",redirect:{name:"home"},children:[{path:"docs",redirect:{name:"docs"},children:[{path:"tag/:tag",redirect:function(e){return{name:"docs-tag",params:{source:"main",tag:e.params.tag},query:{scrollTo:e.query.scrollto}}},children:[{path:"file/:category/:file",redirect:function(e){return{name:"docs-file",params:{source:"main",tag:e.params.tag,category:e.params.category,file:e.params.file},query:{scrollTo:e.query.scrollto}}}},{path:"class/:class",redirect:function(e){return{name:"docs-class",params:{source:"main",tag:e.params.tag,class:e.params.class},query:{scrollTo:e.query.scrollto}}}},{path:"typedef/:typedef",redirect:function(e){return{name:"docs-typedef",params:{source:"main",tag:e.params.tag,typedef:e.params.typedef},query:{scrollTo:e.query.scrollto}}}}]}]}]},{path:"*",component:Be}]}),Bs=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"container"},[e._t("default")],2)},Us=[],Is={name:"container"},Hs=Is,Gs=(s("88b1"),Object(p["a"])(Hs,Bs,Us,!1,null,null,null)),zs=Gs.exports,Js=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"slide"},[s("container",[e._t("default")],2)],1)},Ys=[],Ks={name:"slide"},Zs=Ks,Xs=(s("6045"),Object(p["a"])(Zs,Js,Ys,!1,null,null,null)),ea=Xs.exports,ta=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},sa=[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"sk-folding-cube"},[s("div",{staticClass:"sk-cube1 sk-cube"}),s("div",{staticClass:"sk-cube2 sk-cube"}),s("div",{staticClass:"sk-cube4 sk-cube"}),s("div",{staticClass:"sk-cube3 sk-cube"})])}],aa={name:"loading"},ia=aa,na=(s("cb13"),Object(p["a"])(ia,ta,sa,!1,null,null,null)),ra=na.exports,oa=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",[s("h1",[e._v("Unknown "+e._s(e.type||"page"))]),s("p",[e._v("This page doesn't actually exist. Oh no!")]),s("p",[e._v("Instead, please accept this exceptionally awesome piece of artwork:")]),s("p",[s("awesome",{attrs:{light:e.darkMode}})],1)])},la=[],ca=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("svg",{attrs:{width:"432.4",height:"567.1",version:"1.1",viewBox:"0 0 114.4 150.1",xmlns:"http://www.w3.org/2000/svg"}},[s("g",{attrs:{transform:"translate(58.39 -90.57)",fill:e.light?"white":"black"}},[s("path",{attrs:{d:"m36.98 239.8c-0.701-1.163-1.164-2.237-2.31-5.358-0.5341-1.455-1.264-3.301-1.623-4.101-0.3584-0.8004-1.071-2.408-1.584-3.572-1.048-2.38-1.192-2.7-3.641-8.129-0.9667-2.143-2.005-4.703-2.308-5.689-0.6518-2.124-1.094-3.146-3.167-7.312-0.8587-1.726-1.561-3.302-1.561-3.502v-0.3641l-27.38 0.3366-0.191 0.2908c-0.105 0.1599-0.4353 1.092-0.7338 2.072-0.2986 0.9798-0.7809 2.185-1.072 2.678s-0.6905 1.478-0.8878 2.187-0.6848 2.184-1.083 3.275c-1.182 3.236-1.708 5.263-2.123 8.182l-0.3918 2.758-4e-3 3.327-4e-3 3.327-0.3608 1.534c-0.1985 0.8434-0.4296 1.602-0.5136 1.686l-0.1528 0.1528-0.7993-0.3067 0.8625-2.008 0.4067-10.05 0.2774-1.72c0.3197-1.982 0.976-4.316 2.009-7.144 0.3987-1.091 0.8862-2.565 1.083-3.275s0.5939-1.689 0.8815-2.177c0.4808-0.8148 1.606-4.066 1.606-4.64v-0.246l-1.042 0.5576-12.32-0.142 0.04-0.5292c0.022-0.291 0.2165-1.392 0.4322-2.447l0.3921-1.918 0.385-0.596c0.2118-0.3278 0.6039-1.191 0.8714-1.919l0.4864-1.323 2.818-2.802 0.5285-1.036c0.2907-0.5698 0.5285-1.269 0.5285-1.554 0-0.2848 0.2382-1.073 0.5294-1.753l0.5293-1.235 0.1579-2.293 0.1578-2.293 0.5182-2.514c0.285-1.382 0.5806-2.811 0.6569-3.175 0.0763-0.3638 0.4432-1.651 0.8153-2.86l0.6765-2.199-0.8962-0.9331c-0.4929-0.5132-1.313-1.162-1.822-1.442-0.5093-0.2801-1.64-1.103-2.514-1.829-0.8731-0.7256-2.958-2.255-4.633-3.399s-3.216-2.285-3.424-2.536-0.9213-0.8258-1.585-1.277c-0.6632-0.4516-1.958-1.455-2.878-2.229-0.9194-0.7745-2.051-1.604-2.514-1.843-0.9062-0.4684-2.179-1.441-4.119-3.147-0.6715-0.5906-1.876-1.536-2.676-2.101-1.693-1.195-2.7-2.088-8.046-7.128-6.046-5.7-10.86-10.61-12.03-12.27l-0.6213-0.8803 0.5074-0.5074 1.606 1.928c1.585 1.902 5.771 6.111 11.71 11.77 4.193 3.998 5.381 5.047 7.673 6.778 1.091 0.8241 2.639 2.043 3.44 2.708 0.8004 0.6654 2.096 1.627 2.88 2.137 1.306 0.8499 3.627 2.641 7.042 5.434 0.7276 0.5951 2.514 1.896 3.969 2.891s3.301 2.345 4.101 2.999c0.8004 0.6545 1.812 1.385 2.249 1.623 0.4366 0.2384 1.228 0.8496 1.759 1.358l0.9656 0.9246 0.1883-0.623c0.1036-0.3426 0.3401-0.9802 0.5257-1.417 0.1855-0.4366 0.5776-1.449 0.8714-2.249 2.052-5.593 3.5-8.935 4.411-10.19 0.3179-0.4366 0.6577-1.01 0.7551-1.274l0.1771-0.4798 0.2664 0.1647c0.3759 0.2323 0.3308 0.9427-0.0911 1.436-0.7629 0.8912-2.955 5.537-3.827 8.11-0.6586 1.943-1.306 3.67-1.784 4.755-0.1951 0.4432-0.4837 1.382-0.6414 2.085-0.1577 0.7037-0.5273 1.994-0.8214 2.867-0.2941 0.8729-0.6433 2.078-0.7761 2.677-0.1328 0.5995-0.4268 1.923-0.6535 2.942-0.2267 1.019-0.5275 3.144-0.6684 4.723l-0.2563 2.871-0.5542 1.76c-0.3048 0.9678-0.8586 2.39-1.231 3.16l-0.6763 1.4-1.285 1.231c-0.7066 0.6772-1.285 1.332-1.285 1.455s-0.3737 1.023-0.8304 1.999l-0.8304 1.775-0.3603 1.72c-0.1982 0.9458-0.3603 1.75-0.3603 1.786 0 0.0364 2.508 0.0662 5.574 0.0662h5.574l0.8913-0.4757 21.96-0.1639c12.08-0.0902 23.42-0.2332 25.2-0.318l3.241-0.1541v-0.9676l-1.002-1.54c-0.9603-1.477-2.438-4.775-2.438-5.441 0-0.6229-1.427-4.049-2.032-4.878-0.3378-0.4632-0.6142-0.904-0.6142-0.9795s-0.5228-0.8871-1.162-1.804c-0.6389-0.9165-1.49-2.262-1.891-2.989-0.4012-0.7276-1.173-1.859-1.716-2.514-0.5426-0.6548-1.671-2.322-2.507-3.704s-1.982-3.174-2.546-3.98c-0.5644-0.8067-1.026-1.565-1.026-1.685 0-0.12-0.3274-0.6109-0.7276-1.091-0.6424-0.7705-1.055-1.375-2.712-3.975-0.2183-0.3425-1.087-1.152-1.93-1.798l-1.533-1.176-1.087-1.548c-0.5978-0.8516-1.412-1.905-1.809-2.342-0.9476-1.042-1.315-1.788-1.315-2.674v-0.7242l0.4201-0.4642 0.4201-0.4642-0.1786-0.8078-1.275 0.6488c-0.701 0.3568-1.449 0.6488-1.663 0.6488-0.2136 0-0.683 0.193-1.043 0.429l-0.6547 0.429-8.065-0.2761-1.296-0.4224c-1.294-0.4218-4.012-1.846-5.559-2.913-1.841-1.27-4.884-4.663-7.952-8.867-1.322-1.811-1.513-2.153-4.097-7.341l-2.13-4.277v-4.45l0.6839-1.964c0.3762-1.08 1.343-3.63 2.148-5.666l1.464-3.701 1.064-1.855c1.548-2.699 1.775-3.142 1.662-3.255-0.0559-0.0559-0.6431 0.2158-1.305 0.6037l-1.203 0.7053-0.2725-0.1684c-0.1499-0.0926-0.2725-0.2787-0.2725-0.4136v-0.2452l1.521-0.8114c0.8367-0.4463 2.209-1.183 3.05-1.637l1.529-0.8255-0.5438-0.5438v-1.715l0.4831-0.2986 0.1852-1.096c0.2746-1.625 0.8354-2.801 2.152-4.513l1.181-1.535 1.637-1.123c2.127-1.458 2.25-1.529 5.209-2.99 3.923-1.938 5.041-2.391 6.747-2.737l1.588-0.3223 5.778 0.1638 0.2194 0.6615h-6.387l-1.261 0.3039c-1.365 0.329-2.124 0.6261-4.965 1.944-1.019 0.4724-2.031 0.9352-2.249 1.028-0.2183 0.0932-0.7541 0.4049-1.191 0.6928-0.4366 0.2878-0.9711 0.6079-1.188 0.7112-0.2168 0.1033-1.019 0.6254-1.782 1.16l-1.388 0.9723-1.061 1.284c-1.224 1.482-1.967 2.963-2.241 4.471-0.1058 0.5821-0.3093 1.2-0.4523 1.373l-0.26 0.3147 0.1706 1.37 2.117-1.115 5.121 0.3278 1.931-3.295 5.489-5.59 3.387-1.72h2.619l0.2514 0.2331c0.318 0.2949 4.506 1.726 6.606 2.257 0.8759 0.2216 3.495 0.713 5.821 1.092l4.228 0.689 0.4939 0.4824-0.1744 0.1744-0.1744 0.1744-2.983-0.4506c-1.641-0.2478-4.173-0.6896-5.627-0.9818l-2.644-0.5312-2.78-0.9333c-1.529-0.5133-2.893-1.041-3.032-1.173l-0.2514-0.2393h-2.09l-3.409 1.72-5.07 5.29-0.7482 1.269c-0.4115 0.698-0.7482 1.306-0.7482 1.351 0 0.0454 0.8791 0.1489 1.954 0.2302l1.954 0.1478 0.807 0.4173c0.4439 0.2295 1.501 1.06 2.349 1.845l1.542 1.427 3.17-3.162 1.014-0.5217c0.5575-0.287 1.927-0.7622 3.043-1.056l2.029-0.5344 6.937-0.2937 1.162 0.4301c0.6389 0.2365 2.293 0.6714 3.675 0.9664s2.752 0.6388 3.043 0.764 1.303 0.3706 2.249 0.5452c0.9459 0.1746 1.831 0.4255 1.967 0.5574l0.247 0.2398-0.3588 0.3588-1.92-0.3336c-1.056-0.1835-2.158-0.4381-2.449-0.5659-0.291-0.1278-1.87-0.5295-3.51-0.8927s-3.209-0.7826-3.488-0.932l-0.5076-0.2717h-4.728l-2.268 0.3956c-2.154 0.3756-2.628 0.5162-4.583 1.359l-0.8287 0.3573-3.39 3.373 2.207 2.857 1.308 2.51c0.7192 1.38 1.447 2.748 1.616 3.039 0.5083 0.8714 1.651 4.099 2.201 6.218 0.2835 1.091 0.6187 2.342 0.7448 2.778 0.1261 0.4366 0.6651 2.461 1.198 4.498l0.9684 3.704-0.2342 10.58-0.3813 0.9872c-0.2097 0.543-0.4629 1.069-0.5626 1.169-0.0997 0.0997-0.1813 0.3754-0.1813 0.6127v0.4314l-2.117 2.067v1.892l-0.8439 1.205 0.1504 0.5994 0.1504 0.5994 0.8668 0.942c0.4768 0.5181 1.317 1.609 1.867 2.424l0.9997 1.482 3.689 2.944v0.3446c0 0.4518 0.8596 1.22 1.365 1.22h0.3973l3.769-3.307 1.587-1.914c0.8728-1.053 2.099-2.644 2.724-3.536 0.6256-0.8921 1.614-2.303 2.196-3.136 1.387-1.984 3.137-4.171 6.226-7.782 1.387-1.621 2.809-3.364 3.16-3.874 0.3514-0.5093 1.13-1.521 1.729-2.249 1.449-1.759 5.121-6.978 5.95-8.459 0.3638-0.6493 1.125-1.988 1.691-2.975 0.5664-0.9872 1.234-2.367 1.483-3.065l0.4528-1.27 0.4744-0.105 0.171 1.205-0.9593 1.942c-0.5276 1.068-1.37 2.579-1.871 3.357-0.5017 0.7786-0.9121 1.522-0.9121 1.651 0 0.1296-0.4465 0.8078-0.9922 1.507-0.5457 0.6994-1.468 1.954-2.051 2.788s-1.571 2.184-2.198 3c-0.627 0.8156-1.52 2.007-1.984 2.647-0.4644 0.6404-2.035 2.563-3.49 4.273-4.236 4.977-5.58 6.723-8.442 10.97-1.358 2.014-4.155 5.462-5.023 6.193-0.2754 0.2319-1.072 0.9176-1.77 1.524-0.698 0.6063-1.467 1.213-1.71 1.349l-0.4406 0.2466 0.3974 0.7684c0.2186 0.4226 0.6477 0.995 0.9536 1.272s0.5563 0.6286 0.5563 0.7816c0 0.153 0.4618 0.9382 1.026 1.745 0.5644 0.8067 1.71 2.598 2.546 3.98s1.964 3.049 2.507 3.704c0.5426 0.6548 1.315 1.786 1.716 2.514 0.4012 0.7276 1.252 2.073 1.891 2.989 0.6389 0.9165 1.162 1.728 1.162 1.804s0.2764 0.5163 0.6142 0.9795c0.6047 0.8291 2.032 4.256 2.032 4.878 0 0.6707 1.48 3.969 2.452 5.462l1.015 1.561-0.1596 1.906-1.984 0.1639c-1.091 0.0901-5.884 0.1794-10.65 0.1984l-8.665 0.0346v0.2358c0 0.1297 0.7026 1.648 1.561 3.373 2.059 4.139 2.516 5.189 3.146 7.239 0.4673 1.52 1.519 4.024 3.501 8.334 0.3345 0.7276 0.8172 1.799 1.073 2.381 1.202 2.739 2.387 5.422 2.981 6.747 0.3584 0.8004 1.086 2.646 1.617 4.101s1.346 3.414 1.812 4.354 0.8865 1.803 0.935 1.918l0.0882 0.2102h-0.7947zm-26.19-85.76c0.4779-0.202 1.494-0.6393 2.259-0.9718l1.39-0.6044-0.1344-0.8346h1.152l1.626-1.554v-0.4268c0-0.2347 0.0984-0.5399 0.2186-0.6781 0.1202-0.1382 0.3881-0.7871 0.5953-1.442l0.3767-1.191-0.01-5.292-0.01-5.292-0.4248-1.588c-0.2336-0.8731-0.7429-2.719-1.132-4.101-0.3888-1.382-0.9261-3.347-1.194-4.366-0.5314-2.02-1.683-5.245-2.173-6.085-0.1698-0.291-0.893-1.651-1.607-3.021-1.317-2.527-2.839-4.743-3.524-5.128l-0.3762-0.2116v-0.7184l-1.372-1.234c-0.7549-0.6787-1.735-1.422-2.179-1.651l-0.8064-0.417-9.543-0.4566-0.9211 0.4714c-0.5066 0.2593-1.49 0.8641-2.186 1.344l-1.265 0.8725-0.6127 1.238c-0.337 0.6811-1.093 2.073-1.68 3.093l-1.067 1.855-1.464 3.702c-0.8053 2.036-1.772 4.585-2.148 5.666l-0.6839 1.964v3.921l2.183 4.397c1.201 2.418 2.361 4.71 2.58 5.093 1.027 1.802 5.283 7.157 6.983 8.786 1.591 1.525 2.33 2.048 4.659 3.299l1.984 1.066 1.191 0.2905c2.035 0.4965 2.17 0.5101 5.349 0.5416l3.1 0.0307zm-11.43-10.07c-0.1765-0.2126-0.578-0.4671-0.8923-0.5654-0.3143-0.0983-1.069-0.5197-1.677-0.9363-0.6083-0.4166-1.192-0.7575-1.298-0.7575-0.1056 0-0.5778-0.2943-1.049-0.654l-0.8575-0.654-0.8486-2.49v-1.696l-1.112-0.2907 0.1745-0.2824 0.1745-0.2824h6.552l0.2761 0.4467 7.521 0.359 0.7012 0.582v1.523h-0.4814l-0.6105 3.619-1.036 1.704-1.824 0.7619h-3.392zm4.083-0.7832 0.9-0.376 0.4069-0.7868c0.2238-0.4328 0.4846-1.305 0.5796-1.939 0.095-0.6337 0.3521-1.543 0.5714-2.022s0.3492-0.9189 0.2886-0.9795c-0.0606-0.0606-1.713-0.1844-3.673-0.2752l-3.563-0.1651-1.069-0.5134-4.222 0.1568-0.0791 0.68-0.0791 0.68 0.952 2.533 1.191 0.6644c0.6548 0.3654 1.496 0.8805 1.868 1.145 0.3727 0.2642 1.007 0.5631 1.41 0.6642l0.7328 0.1839 0.2785 0.7256h2.606zm-13.18-12.5-0.1764-0.1764v-12.05l0.5753-0.3555 0.3508 0.4566-0.1512 12.3h-0.211c-0.116 0-0.2904-0.0794-0.3874-0.1764zm12.37-5.728c-0.0736-0.1917-0.0996-1.591-0.0578-3.109l0.0759-2.76h0.5292l0.149 6.218h-0.2813c-0.1547 0-0.3415-0.1569-0.4151-0.3486z","stroke-width":".2646"}})])])},ua=[],da={name:"awesome",props:["light"]},pa=da,ma=Object(p["a"])(pa,ca,ua,!1,null,null,null),ha=ma.exports,fa={name:"unknown-page",props:["type","darkMode"],components:{Awesome:ha}},ga=fa,ya=(s("1224"),Object(p["a"])(ga,oa,la,!1,null,null,null)),ba=ya.exports;a["a"].config.productionTip=!1,s("93ec"),a["a"].component("container",zs),a["a"].component("slide",ea),a["a"].component("loading",ra),a["a"].component("unknown-page",ba),a["a"].directive("hljs",De),a["a"].filter("marked",(function(e){return e||(e="**Documentation missing.**"),e=n()(e),e.replace(/<(info|warn)>([\s\S]+)<\/\1>/gi,'<div class="$1">$2</div>')})),new a["a"]({router:Ws,render:function(e){return e(X)}}).$mount("#app")},"584f":function(e,t,s){"use strict";s("dd7c")},"591c":function(e,t,s){},"596e":function(e,t,s){"use strict";s("2e08")},"59ba":function(e,t,s){},"5faf":function(e,t,s){},6045:function(e,t,s){"use strict";s("591c")},"6bc5":function(e,t,s){},"6e60":function(e,t,s){},7690:function(e,t,s){},"778f":function(e,t,s){},"786a":function(e,t,s){},"78dc":function(e,t,s){},"7d7f":function(e,t,s){"use strict";s("0811")},"7fe0":function(e,t,s){"use strict";s("6bc5")},"85ec":function(e,t,s){},8658:function(e,t,s){},"88b1":function(e,t,s){"use strict";s("5faf")},9186:function(e,t,s){},"93ec":function(e,t,s){},"944c":function(e,t,s){"use strict";s("786a")},a703:function(e,t,s){"use strict";s("8658")},abe3:function(e,t,s){"use strict";s("7690")},ac06:function(e,t,s){"use strict";s("1c3a")},b583:function(e,t,s){"use strict";s("50e1")},c64f:function(e,t,s){},c69e:function(e,t){e.exports={string:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",number:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",boolean:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",symbol:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",void:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",Object:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",Function:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",function:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",Array:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",Set:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",Map:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",Date:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",RegExp:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",Promise:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",Error:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",EventEmitter:"https://nodejs.org/dist/latest/docs/api/events.html#events_class_eventemitter",Timeout:"https://nodejs.org/dist/latest/docs/api/timers.html#timers_class_timeout",Buffer:"https://nodejs.org/dist/latest/docs/api/buffer.html#buffer_class_buffer",ReadableStream:"https://nodejs.org/dist/latest/docs/api/stream.html#stream_class_stream_readable",ChildProcess:"https://nodejs.org/dist/latest/docs/api/child_process.html#child_process_class_childprocess",Worker:"https://nodejs.org/api/worker_threads.html#worker_threads_class_worker",MessagePort:"https://nodejs.org/api/worker_threads.html#worker_threads_class_messageport",ytdl:"https://github.com/fent/node-ytdl-core/blob/master/typings/index.d.ts",Collection:"https://discord.js.org/#/docs/collection/master/class/Collection",Client:"https://discord.js.org/#/docs/main/master/class/Client",Message:"https://discord.js.org/#/docs/main/master/class/Message",GuildMember:"https://discord.js.org/#/docs/main/master/class/GuildMember",User:"https://discord.js.org/#/docs/main/master/class/User",VoiceConnection:"https://discord.js.org/#/docs/main/master/class/VoiceConnection",StreamDispatcher:"https://discord.js.org/#/docs/main/master/class/StreamDispatcher",TextChannel:"https://discord.js.org/#/docs/main/master/class/TextChannel",VoiceChannel:"https://discord.js.org/#/docs/main/master/class/VoiceChannel",Snowflake:"https://discord.js.org/#/docs/main/master/typedef/Snowflake",StageChannel:"https://discord.js.org/#/docs/main/master/class/StageChannel",VoiceState:"https://discord.js.org/#/docs/main/master/class/VoiceState"}},cb13:function(e,t,s){"use strict";s("f314")},ce9c:function(e,t,s){},db3b:function(e,t){function s(e,t){var s=null;return function(){for(var a=this,i=arguments.length,n=new Array(i),r=0;r<i;r++)n[r]=arguments[r];clearTimeout(s),s=setTimeout((function(){e.apply(a,n)}),t)}}function a(e,t){t.value!==t.oldValue&&(e.oninput=s((function(){e.dispatchEvent(new Event("change"))}),parseInt(t.value)||500))}a.debounce=s,e.exports=a},dbee:function(e,t,s){"use strict";s("dedb")},dd7c:function(e,t,s){},dedb:function(e,t,s){},defc:function(e,t,s){"use strict";s("201b")},e283:function(e,t,s){"use strict";s("59ba")},e386:function(e,t,s){"use strict";s("6e60")},f278:function(e,t,s){"use strict";s("2db7")},f314:function(e,t,s){},f616:function(e,t,s){},fed3:function(e,t,s){"use strict";s("78dc")}});
//# sourceMappingURL=app.773c4b16.js.map